# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will build, test, sign and package a WPF or Windows Forms desktop application
# built on .NET Core.
# To learn how to migrate your existing application to .NET Core,
# refer to https://docs.microsoft.com/en-us/dotnet/desktop-wpf/migration/convert-project-from-net-framework
#
# To configure this workflow:
#
# 1. Configure environment variables
# GitHub sets default environment variables for every workflow run.
# Replace the variables relative to your project in the "env" section below.
#
# 2. Signing
# Generate a signing certificate in the Windows Application
# Packaging Project or add an existing signing certificate to the project.
# Next, use PowerShell to encode the .pfx file using Base64 encoding
# by running the following Powershell script to generate the output string:
#
# $pfx_cert = Get-Content '.\SigningCertificate.pfx' -Encoding Byte
# [System.Convert]::ToBase64String($pfx_cert) | Out-File 'SigningCertificate_Encoded.txt'
#
# Open the output file, SigningCertificate_Encoded.txt, and copy the
# string inside. Then, add the string to the repo as a GitHub secret
# and name it "Base64_Encoded_Pfx."
# For more information on how to configure your signing certificate for
# this workflow, refer to https://github.com/microsoft/github-actions-for-desktop-apps#signing
#
# Finally, add the signing certificate password to the repo as a secret and name it "Pfx_Key".
# See "Build the Windows Application Packaging project" below to see how the secret is used.
#
# For more information on GitHub Actions, refer to https://github.com/features/actions
# For a complete CI/CD sample to get started with GitHub Action workflows for Desktop Applications,
# refer to https://github.com/microsoft/github-actions-for-desktop-apps

name: .NET Core Desktop

on: 
  create:
  workflow_dispatch:

jobs:

  build:

    runs-on: windows-latest  # For a list of available runner types, refer to
    # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: ClassIsland.sln                       # Replace with your solution name, i.e. MyWpfApp.sln.
      # Test_Project_Path: your-test-project-path                 # Replace with the path to your test project, i.e. MyWpfApp.Tests\MyWpfApp.Tests.csproj.
      Wap_Project_Directory: ClassIsland/ClassIsland    # Replace with the Wap project directory relative to the solution, i.e. MyWpfApp.Package.
      Wap_Project_Path: ClassIsland/ClassIsland/ClassIsland.csproj                   # Replace with the path to your Wap project, i.e. MyWpf.App.Package\MyWpfApp.Package.wapproj.

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: Get application version
        run: |
          $env:app_ver = (git describe --abbrev=0 --tags)
          echo $env:app_ver
      
      - name: List files
        run: ls
      
      # Install the .NET Core workload
      - name: Install .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 6.0.x
      
      # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
      - name: Setup MSBuild.exe
        uses: microsoft/setup-msbuild@v1.0.2
      
      - name: Publish application
        run: |
          cd ./ClassIsland
          ls
          dotnet publish ./ClassIsland.csproj -p:PublishProfile=FolderProfile -c Release
          
      - name: Package application
        run: |
          cd .\ClassIsland\bin\Release\net6.0-windows\publish\win-x64\
          7z a ClassIsland.zip ./ClassIsland.exe -mx=9

      - name: Create Checksum File
        run: |
          cd .\ClassIsland\bin\Release\net6.0-windows\publish\win-x64\
          certutil -hashfile ./ClassIsland.zip MD5 | findstr /v "[^0-9a-z]" >> ./ClassIsland.MD5CheckSum
          
      - name: Upload to AppCenter
        uses: akiojin/appcenter-distribute-github-action@v1.4.8
        with:
          # API token (App API token or User API token)
          token: ${{secrets.APPCENTER_TOKEN}}
          # Build number
          build-number: $env:app_ver
          # ipa or apk file path
          path: .\ClassIsland\bin\Release\net6.0-windows\publish\win-x64\ClassIsland.zip
          # Specify app in the <ownerName>/<appName> format
          app: HelloWRC/ClassIsland
          group: Collaborators
          
      - name: Update to release
        uses: ncipollo/release-action@v1.10.0
        with:
          artifacts: ".\\ClassIsland\\bin\\Release\\net6.0-windows\\publish\\win-x64\\ClassIsland.zip,.\\ClassIsland\\bin\\Release\\net6.0-windows\\publish\\win-x64\\ClassIsland.MD5CheckSum"
          draft: true
