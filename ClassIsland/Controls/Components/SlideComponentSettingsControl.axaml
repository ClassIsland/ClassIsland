<ci:ComponentBase x:Class="ClassIsland.Controls.Components.SlideComponentSettingsControl"
                  x:TypeArguments="componentSettings:SlideComponentSettings"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ClassIsland.Controls.Components"
             xmlns:ci="http://classisland.tech/schemas/xaml/core"
             xmlns:componentSettings="clr-namespace:ClassIsland.Models.ComponentSettings"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:controls="clr-namespace:FluentAvalonia.UI.Controls;assembly=FluentAvalonia"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <ci:ComponentBase.Resources>
        <ci:RulesetControl x:Key="RulesetControl"/>
    </ci:ComponentBase.Resources>
    <ScrollViewer>
        <StackPanel
            Classes="settings-container animated-intro" Margin="0"
            DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:SlideComponentSettingsControl}}">
            <!-- 轮换间隔 -->
            <controls:SettingsExpander IconSource="{ci:FluentIconSource &#xf361;}"
                                       Header="轮换间隔"
                                       Description="组件自动轮换的间隔时间">
                <controls:SettingsExpander.Footer>
                    <ci:Field Suffix="秒">
                        <controls:NumberBox Width="150" SpinButtonPlacementMode="Inline"
                                            Minimum="0.1"
                                            Value="{Binding Settings.SlideSeconds}"/>
                    </ci:Field>
                </controls:SettingsExpander.Footer>
            </controls:SettingsExpander>
            <!-- 轮换模式 -->
            <controls:SettingsExpander IconSource="{ci:FluentIconSource &#xefcd;}"
                                       Header="轮换模式"
                                       Description="设定轮换组件的行为">
                <controls:SettingsExpander.Footer>
                    <ComboBox SelectedIndex="{Binding Settings.SlideMode}"
                              Width="100">
                        <ComboBoxItem>循环</ComboBoxItem>
                        <ComboBoxItem>随机</ComboBoxItem>
                        <ComboBoxItem>往复</ComboBoxItem>
                    </ComboBox>
                </controls:SettingsExpander.Footer>
            </controls:SettingsExpander>
            <!-- 满足规则时暂停 -->
            <controls:SettingsExpander IconSource="{ci:FluentIconSource &#xec93;}"
                                       Header="满足规则时暂停"
                                       Description="在指定规则满足时暂停轮播。">
                <controls:SettingsExpander.Footer>
                    <StackPanel Orientation="Horizontal">
                        <Button HorizontalAlignment="Left"
                                Theme="{StaticResource TransparentButton}"
                                Click="ButtonOpenPauseRuleset_OnClick"
                                IsVisible="{Binding Settings.IsPauseOnRuleEnabled}">
                            <ci:IconText Glyph="&#xf17e;" Text="编辑规则集…" />
                        </Button>
                        <ToggleSwitch VerticalAlignment="Center"
                                      IsChecked="{Binding Settings.IsPauseOnRuleEnabled}" />
                    </StackPanel>
                </controls:SettingsExpander.Footer>
            </controls:SettingsExpander>
            <!-- 满足规则时停止 -->
            <controls:SettingsExpander IconSource="{ci:FluentIconSource &#xee67;}"
                                       Header="满足规则时停止"
                                       Description="在指定规则满足时停止轮播。停止时会停止轮播，并回到第一个组件。如果此处的规则和暂停规则同时满足，会停止轮播而不是暂停。">
                <controls:SettingsExpander.Footer>
                    <StackPanel Orientation="Horizontal">
                        <Button HorizontalAlignment="Left"
                                Theme="{StaticResource TransparentButton}"
                                Click="ButtonOpenStopRuleset_OnClick"
                                IsVisible="{Binding Settings.IsStopOnRuleEnabled}">
                            <ci:IconText Glyph="&#xf17e;" Text="编辑规则集…" />
                        </Button>
                        <ToggleSwitch VerticalAlignment="Center"
                                      IsChecked="{Binding Settings.IsStopOnRuleEnabled}" />
                    </StackPanel>
                </controls:SettingsExpander.Footer>
            </controls:SettingsExpander>
            <!-- 启用动画 -->
            <controls:SettingsExpander IconSource="{ci:FluentIconSource &#xedc1;}"
                                       Header="启用动画"
                                       Description="启用后，将在切换组件时播放过渡动画。">
                <controls:SettingsExpander.Footer>
                    <ToggleSwitch VerticalAlignment="Center"
                                  IsChecked="{Binding Settings.IsAnimationEnabled, Mode=TwoWay}" />
                </controls:SettingsExpander.Footer>
            </controls:SettingsExpander>
        </StackPanel>
    </ScrollViewer>
</ci:ComponentBase>
