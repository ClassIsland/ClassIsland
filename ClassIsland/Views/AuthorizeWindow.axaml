<ci:MyWindow x:Class="ClassIsland.Views.AuthorizeWindow"
        xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClassIsland.Views"
        xmlns:ci="http://classisland.tech/schemas/xaml/core"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:registry="clr-namespace:ClassIsland.Core.Services.Registry;assembly=ClassIsland.Core"
        xmlns:controls="clr-namespace:ClassIsland.Controls"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:input="clr-namespace:Avalonia.Labs.Input;assembly=Avalonia.Labs.CommandManager"
        mc:Ignorable="d"
        Height="500" Width="500"
        WindowStartupLocation="CenterScreen"
        d:DataContext="{d:DesignInstance local:AuthorizeWindow}"
        SizeToContent="Height"
        MinHeight="300"
        MaxHeight="700"
        Topmost="True"
        Title="ClassIsland">
    <input:CommandManager.CommandBindings>
        <input:CommandBinding Command="{x:Static ci:AuthorizeProviderControlBase.CompleteAuthorizeCommand}" Executed="CommandBindingCompleteAuthorize_OnExecuted"></input:CommandBinding>
    </input:CommandManager.CommandBindings>
    <Grid Margin="16" ColumnDefinitions="Auto,*" RowDefinitions="Auto,Auto,*,Auto" MinHeight="300">
        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0 0 0 12"
                    IsVisible="{Binding !ViewModel.IsEditingMode}">
            <TextBlock Text="验证您的身份" Theme="{StaticResource SubtitleTextBlockStyle}"/>
            <TextBlock Text="要继续操作，请通过下列的方式验证您的身份。" TextWrapping="Wrap" Margin="0 4 0 0"/>
        </StackPanel>
        <StackPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="0 0 0 12"
                    IsVisible="{Binding ViewModel.IsEditingMode}">
            <TextBlock Text="编辑认证项目" Theme="{StaticResource SubtitleTextBlockStyle}"/>
            <TextBlock Text="编辑进行此操作需要的认证方式。" TextWrapping="Wrap" Margin="0 4 0 0"/>
        </StackPanel>

        <StackPanel Orientation="Horizontal"
                    IsVisible="{Binding ViewModel.IsEditingMode, RelativeSource={RelativeSource FindAncestor, AncestorType=local:AuthorizeWindow}}"
                    Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2"
                    Margin="0 0 0 8">
            <Button Theme="{StaticResource TransparentButton}"
                    Click="ButtonAddAuthorizeMethod_OnClick">
                <Button.Content>
                    <ci:IconText Glyph="&#xe00d;" Text="添加认证方式"></ci:IconText>
                </Button.Content>
            </Button>
            <ComboBox ItemsSource="{x:Static registry:AuthorizeProviderRegistryService.RegisteredAuthorizeProviders}" MinWidth="100"
                      SelectedItem="{Binding ViewModel.SelectedAuthorizeProviderInfo}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <ci:IconText Glyph="{Binding IconGlyph}" Text="{Binding Name}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </StackPanel>

        <ListBox Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2"
                 ItemsSource="{Binding ViewModel.Credential.Items}"
                 Margin="0 0 0 0"
                 Classes="item-sort"
                 x:Name="MainListBox"
                 SelectedItem="{Binding ViewModel.SelectedCredentialItem}">
            <ListBox.Styles>
                <Style Selector=".item-sort ListBoxItem">
                    <Setter Property="Interaction.Behaviors">
                        <BehaviorCollectionTemplate>
                            <BehaviorCollection>
                                <ci:AdvancedItemDragBehavior HorizontalDragThreshold="33550336" VerticalDragThreshold="3"
                                                             Orientation="Vertical"/>
                            </BehaviorCollection>
                        </BehaviorCollectionTemplate>
                    </Setter>
                </Style>
            </ListBox.Styles>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid Margin="0 8 4 8" RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                        
                        <ci:FluentIcon Grid.Column="0" Grid.Row="0"
                                       Foreground="{DynamicResource AccentFillColorDefaultBrush}"
                                       Glyph="{Binding ProviderInfo.IconGlyph}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Margin="0 0 8 0"
                                       Height="20"
                                       FontSize="20"
                                       Width="20"/>
                        
                        <TextBlock Grid.Column="1" Grid.Row="0"
                                   VerticalAlignment="Center"
                                   FontWeight="Medium"
                                   FontSize="14">
                            <Run Text="用"/><Run Text="{Binding ProviderInfo.Name, Mode=OneWay}"/><Run Text="继续"/>
                        </TextBlock>
                        <StackPanel Grid.Column="1" Grid.Row="0" 
                                    VerticalAlignment="Center"
                                    Margin="0 -8"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Right">
                            <StackPanel.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="IsSelected" RelativeSource="{RelativeSource FindAncestor, AncestorType=ListBoxItem}"/>
                                    <Binding Path="ViewModel.IsEditingMode" RelativeSource="{RelativeSource FindAncestor, AncestorType=local:AuthorizeWindow}"/>
                                </MultiBinding>
                            </StackPanel.IsVisible>
                            <ci:TouchDragThumb/>
                            <Button Theme="{StaticResource TransparentButton}"
                                    ToolTip.Tip="删除"
                                    Content="{ci:FluentIcon &#xe671;}"
                                    Foreground="IndianRed">
                                <Button.Flyout>
                                    <Flyout>
                                        <StackPanel Spacing="8" TextElement.Foreground="{DynamicResource TextFillColorPrimaryBrush}">
                                            <TextBlock Text="要删除此认证方式吗？" FontWeight="Bold"/>
                                            <TextBlock Text="此操作无法撤销。"/>
                                            <Button Content="删除" Click="ButtonRemoveSelectedAuthProvider_OnClick"
                                                    Classes="accent"/>
                                        </StackPanel>
                                    </Flyout>
                                </Button.Flyout>
                            </Button>
                        </StackPanel>

                        <controls:AuthorizeProviderPresenter 
                            Grid.Column="1" Grid.Row="1"
                            IsEditingMode="{Binding ViewModel.IsEditingMode, RelativeSource={RelativeSource FindAncestor, AncestorType=local:AuthorizeWindow}, Mode=OneWay}"
                            CredentialItem="{Binding Mode=OneWay}"
                            IsVisible="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType=ListBoxItem}}"/>
                        
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        
        <Grid Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2"
              ColumnDefinitions="* *">
            <Button Grid.Column="0" Margin="0 0 2 0"
                    IsCancel="True" HorizontalAlignment="Stretch"
                    Command="{Binding Close}">
                取消
            </Button>
            <Button Grid.Column="1" Margin="2 0 0 0"
                    Click="ButtonOk_OnClick"
                    Classes="accent" HorizontalAlignment="Stretch"
                    IsVisible="{Binding ViewModel.IsEditingMode, RelativeSource={RelativeSource FindAncestor, AncestorType=local:AuthorizeWindow}}">
                确定
            </Button>
        </Grid>
    </Grid>
</ci:MyWindow>
