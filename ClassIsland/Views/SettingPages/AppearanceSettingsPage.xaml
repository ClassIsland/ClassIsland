<controls:SettingsPageBase x:Class="ClassIsland.Views.SettingPages.AppearanceSettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ClassIsland.Views.SettingPages"
      xmlns:controls="clr-namespace:ClassIsland.Core.Abstractions.Controls;assembly=ClassIsland.Core"
      xmlns:controls1="clr-namespace:ClassIsland.Core.Controls;assembly=ClassIsland.Core"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:converters="clr-namespace:ClassIsland.Core.Converters;assembly=ClassIsland.Core"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="外观"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      Background="{DynamicResource MaterialDesignPaper}"
      FontFamily="{StaticResource HarmonyOsSans}"
      TextElement.FontWeight="Regular"
      TextElement.FontSize="14"
      TextOptions.TextFormattingMode="Ideal"
      TextOptions.TextRenderingMode="Auto"
      d:DataContext="{d:DesignInstance local:AppearanceSettingsPage}">

    <controls:SettingsPageBase.Resources>
        <converters:ColorToColorPickerBrushConverter x:Key="ColorToColorPickerBrushConverter" />
    </controls:SettingsPageBase.Resources>
    <ScrollViewer>
        <StackPanel Style="{StaticResource SettingsPageStackPanelStyle}" Tag="CanPolicyDisable">
            <controls1:IconText Kind="CogOutline" Text="基本" Margin="0 0 0 8" />
            <!-- 界面缩放 -->
            <controls1:SettingsCard IconGlyph="ZoomInOutline" Header="界面缩放"
                                                           Description="课表主界面的缩放大小。">
                <controls1:SettingsCard.Switcher>
                    <Slider Width="180" Minimum="0.75" Maximum="2.5"
                                                    VerticalAlignment="Center"
                                                    Value="{Binding SettingsService.Settings.Scale}"
                                                    AutoToolTipPlacement="BottomRight"
                                                    TickFrequency="0.05"
                                                    TickPlacement="None"
                                                    IsSnapToTickEnabled="True"
                                                    AutoToolTipPrecision="2" />
                </controls1:SettingsCard.Switcher>
            </controls1:SettingsCard>
            <!-- 背景透明度 -->
            <controls1:SettingsCard IconGlyph="SquareTransparent" Header="背景不透明度"
                                                           Description="课表背景颜色的不透明度。">
                <controls1:SettingsCard.Switcher>
                    <Slider Width="180" Minimum="0" Maximum="1"
                                                    Value="{Binding SettingsService.Settings.Opacity}"
                                                    AutoToolTipPlacement="BottomRight"
                                                    TickFrequency="0.05"
                                                    IsSnapToTickEnabled="True"
                                                    AutoToolTipPrecision="2" />
                </controls1:SettingsCard.Switcher>
            </controls1:SettingsCard>
            <!-- 圆角半径 -->
            <controls1:SettingsCard IconGlyph="BorderRoundCorners" Header="圆角半径"
                                    Description="主界面圆角半径，数值为20时左右边缘为半圆。">
                <controls1:SettingsCard.Switcher>
                    <Slider Grid.Column="1" Grid.Row="0" Width="180" Minimum="0" Maximum="20"
                            Value="{Binding SettingsService.Settings.RadiusX}"
                            AutoToolTipPlacement="BottomRight"
                            TickFrequency="0.5"
                            IsSnapToTickEnabled="True"
                            VerticalAlignment="Center"
                            AutoToolTipPrecision="1" />
                </controls1:SettingsCard.Switcher>
            </controls1:SettingsCard>
            <Separator Margin="0 16 0 8" />
            <controls1:IconText Kind="PaletteOutline" Text="主题" Margin="0 0 0 8" />
            <!-- 应用主题 -->
            <controls1:SettingsCard IconGlyph="ThemeLightDark" Header="应用主题"
                                                           Description="控制应用的明暗主题。">
                <controls1:SettingsCard.Switcher>
                    <ComboBox Foreground="{DynamicResource MaterialDesignBody}"
                                                      SelectedIndex="{Binding SettingsService.Settings.Theme}"
                                                      HorizontalContentAlignment="Left">
                        <ComboBoxItem HorizontalContentAlignment="Left">
                            <controls1:IconText Kind="ThemeLightDark" Text="跟随系统" />
                        </ComboBoxItem>
                        <ComboBoxItem HorizontalContentAlignment="Left">
                            <controls1:IconText Kind="WhiteBalanceSunny" Text="明亮" />
                        </ComboBoxItem>
                        <ComboBoxItem HorizontalContentAlignment="Left">
                            <controls1:IconText Kind="WeatherNight" Text="黑暗" />
                        </ComboBoxItem>
                    </ComboBox>
                </controls1:SettingsCard.Switcher>
            </controls1:SettingsCard>
            <!-- 主题色来源 -->
            <controls1:SettingsCard IconGlyph="PaletteSwatchOutline" Header="主题色来源"
                                                           Description="控制应用选取主题色的途径。">
                <controls1:SettingsCard.Switcher>
                    <ComboBox Foreground="{DynamicResource MaterialDesignBody}"
                                                      SelectionChanged="ButtonUpdateWallpaper_OnClick"
                                                      HorizontalContentAlignment="Left"
                                                      SelectedIndex="{Binding SettingsService.Settings.ColorSource}">
                        <ComboBoxItem HorizontalContentAlignment="Left">
                            <controls1:IconText Kind="UserOutline" Text="自定义" />
                        </ComboBoxItem>
                        <ComboBoxItem HorizontalContentAlignment="Left">
                            <controls1:IconText Kind="Wallpaper" Text="系统壁纸" />
                        </ComboBoxItem>
                        <ComboBoxItem HorizontalContentAlignment="Left">
                            <controls1:IconText Kind="MicrosoftWindows" Text="系统" />
                        </ComboBoxItem>
                        <ComboBoxItem HorizontalContentAlignment="Left">
                            <controls1:IconText Kind="PanoramaVariantOutline" Text="屏幕主题色" />
                        </ComboBoxItem>
                    </ComboBox>
                </controls1:SettingsCard.Switcher>
            </controls1:SettingsCard>
            <StackPanel>
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SettingsService.Settings.ColorSource}" Value="0">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Style>
                </StackPanel.Style>
                <!-- 第一主题色 -->
                <controls1:SettingsCard IconGlyph="PaletteOutline" Header="第一主题色"
                                                               Description="应用主要显示的主题颜色。">
                    <controls1:SettingsCard.Switcher>
                        <controls1:ColorPicker
                                                    Color="{Binding SettingsService.Settings.PrimaryColor, Mode=TwoWay}" />
                    </controls1:SettingsCard.Switcher>
                </controls1:SettingsCard>
                <!-- 第二主题色 -->
                <controls1:SettingsCard IconGlyph="PaletteOutline" Header="第二主题色"
                                                               Description="应用次要显示的主题颜色。">
                    <controls1:SettingsCard.Switcher>
                        <controls1:ColorPicker
                                                    Color="{Binding SettingsService.Settings.SecondaryColor, Mode=TwoWay}" />
                    </controls1:SettingsCard.Switcher>
                </controls1:SettingsCard>
            </StackPanel>
            <!-- 壁纸主题色 -->
            <StackPanel>
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SettingsService.Settings.ColorSource}" Value="1">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Style>
                </StackPanel.Style>
                <Separator Margin="0 16 0 8" />
                <controls1:IconText Kind="Wallpaper" Text="壁纸主题色" Margin="0 0 0 8" />
                <!-- 壁纸主题色 -->
                <materialDesign:Card>
                    <Grid>
                        <StackPanel Margin="12">
                            <controls1:IconText Kind="PaletteOutline" Text="选择主题色" />
                            <Grid VerticalAlignment="Bottom"
                                                          IsEnabled="{Binding WallpaperPickingService.IsWorking, Mode=OneWay, Converter={StaticResource BooleanToBooleanReConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <WrapPanel HorizontalAlignment="Right"
                                                                   VerticalAlignment="Center"
                                                                   Grid.Column="1">
                                    <!-- 刷新 -->
                                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                                                                    Click="ButtonUpdateWallpaper_OnClick"
                                                                    VerticalAlignment="Center"
                                                                    Margin="2 0">
                                        <controls1:IconText Kind="Refresh" Text="刷新" />
                                    </Button>
                                    <!-- 预览提取结果 -->
                                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                                                                    Click="ButtonPreviewWallpaper_OnClick"
                                                                    VerticalAlignment="Center"
                                                                    Margin="2 0">
                                        <controls1:IconText Kind="EyeOutline" Text="预览提取结果" />
                                    </Button>
                                </WrapPanel>
                                <!-- 颜色选择 -->
                                <ListBox Grid.Column="0"
                                         ItemsSource="{Binding SettingsService.Settings.WallpaperColorPlatte, Mode=OneWay}"
                                         SelectedIndex="{Binding SettingsService.Settings.SelectedPlatteIndex}"
                                         materialDesign:ScrollViewerAssist.BubbleVerticalScroll="True"
                                         PreviewMouseWheel="UIElement_OnPreviewMouseWheel"
                                         HorizontalAlignment="Left">
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel IsItemsHost="True" />
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <materialDesign:ColorZone
                                                                        Background="{Binding Converter={StaticResource ColorToColorPickerBrushConverter}}"
                                                                        Width="32" Height="32"
                                                                        Mode="Custom">
                                                <materialDesign:PackIcon Kind="Check"
                                                                            VerticalAlignment="Bottom"
                                                                            HorizontalAlignment="Right"
                                                                            Width="14" Height="14"
                                                                            Background="White"
                                                                            Foreground="Black"
                                                                            Visibility="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                            </materialDesign:ColorZone>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </Grid>
                        </StackPanel>
                        <ProgressBar
                                                    Visibility="{Binding WallpaperPickingService.IsWorking, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                    IsIndeterminate="True"
                                                    VerticalAlignment="Top" />
                    </Grid>
                </materialDesign:Card>
                <!-- 启用自动提取主题色 -->
                <materialDesign:Card Margin="0 6 0 6">
                    <Expander Background="Transparent"
                                                      IsExpanded="{Binding SettingsService.Settings.IsWallpaperAutoUpdateEnabled, Mode=OneWay}"
                                                      TextBlock.Foreground="{DynamicResource MaterialDesignBody}">
                        <Expander.Header>
                            <controls1:SettingsControl IconGlyph="RefreshAuto"
                                                                              Foreground="{DynamicResource MaterialDesignBody}"
                                                                              Header="启用自动提取主题色"
                                                                              Description="若启用，将会在每分钟刷新一次壁纸主题色，适用于会随时间大幅变化主题色的动态壁纸。"
                                                                              IsOn="{Binding SettingsService.Settings.IsWallpaperAutoUpdateEnabled, Mode=TwoWay}"
                                                                              Margin="-12 0" />
                        </Expander.Header>
                        <Grid Margin="36 0 48 12"
                                                      IsEnabled="{Binding SettingsService.Settings.IsWallpaperAutoUpdateEnabled, Mode=OneWay}">
                            <!-- 自动提取主题色间隔 -->
                            <controls1:SettingsControl IconGlyph="ClockOutline"
                                                                              Header="自动提取主题色间隔"
                                                                              Description="自动从壁纸提取主题色时间隔的时间，建议以动态壁纸更新速度按需设置，不宜低于10秒。">
                                <controls1:SettingsControl.Switcher>
                                    <controls1:NumbericTextBox MaxValue="36000" MinValue="0"
                                                                Width="150"
                                                                materialDesign:TextFieldAssist.SuffixText="秒"
                                                                Foreground="{DynamicResource MaterialDesignBody}"
                                                                Style="{StaticResource MaterialDesignTextBox}"
                                                                Text="{Binding SettingsService.Settings.WallpaperAutoUpdateIntervalSeconds, Mode=TwoWay, Converter={StaticResource IntToStringConverter}}" />
                                </controls1:SettingsControl.Switcher>
                            </controls1:SettingsControl>
                        </Grid>
                    </Expander>
                </materialDesign:Card>

                <!-- 兼容模式 -->
                <controls1:SettingsCard IconGlyph="CogOutline" Header="启用兼容模式"
                                                               Description="若启用，将从注册表提取壁纸，而非桌面句柄，不兼容动态壁纸。可能可以解决一些壁纸提取中的玄学问题。"
                                                               IsOn="{Binding SettingsService.Settings.IsFallbackModeEnabled, Mode=TwoWay}" />
                <!-- 壁纸层窗口类名 -->
                <controls1:SettingsCard IconGlyph="WindowMaximize" Header="壁纸层窗口类名"
                                                               Visibility="{Binding SettingsService.Settings.IsFallbackModeEnabled, Mode=OneWay, Converter={StaticResource InverseBoolToVisConverter}}"
                                                               Description="获取壁纸时要寻找的壁纸窗口的类名，留空将使用默认类名Progman。当需要从动态壁纸软件（如Wallpaper Engine等）获取壁纸时，请修改此选项为对应壁纸软件的壁纸窗口类名，以正确获取壁纸。若此栏未填写正确，将无法正常获取壁纸。">
                    <controls1:SettingsCard.Switcher>
                        <DockPanel Width="150">
                            <Button Style="{StaticResource MaterialDesignFlatButton}"
                                                            Content="{materialDesign:PackIcon WindowMaximize}"
                                                            ToolTip="浏览…"
                                                            DockPanel.Dock="Right"
                                                            Click="ButtonBrowseWindows_OnClick" />
                            <TextBox Foreground="{DynamicResource MaterialDesignBody}"
                                                             Text="{Binding SettingsService.Settings.WallpaperClassName}" />
                        </DockPanel>
                    </controls1:SettingsCard.Switcher>
                </controls1:SettingsCard>
                <!-- 取色亮度波峰 -->
                <controls1:SettingsCard IconGlyph="ChartBellCurve" Header="取色亮度波峰"
                                                               Description="取色时为亮度更接近此值的颜色赋予更高的权重，修改此值会影响到取色结果中整体颜色的亮度和准确性，请谨慎修改。（默认值：0.6）">
                    <controls1:SettingsCard.Switcher>
                        <controls1:NumbericTextBox MaxValue="1" MinValue="0" Width="150"
                                                                          Foreground="{DynamicResource MaterialDesignBody}"
                                                                          Style="{StaticResource MaterialDesignTextBox}"
                                                                          Text="{Binding SettingsService.Settings.TargetLightValue, Mode=TwoWay, Converter={StaticResource IntToStringConverter}}" />
                    </controls1:SettingsCard.Switcher>
                </controls1:SettingsCard>
            </StackPanel>
            <!-- 屏幕主题色 -->
            <StackPanel>
                <StackPanel.Style>
                    <Style TargetType="StackPanel">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SettingsService.Settings.ColorSource}" Value="3">
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="Visibility" Value="Collapsed" />
                    </Style>
                </StackPanel.Style>
                <Separator Margin="0 16 0 8" />
                <controls1:IconText Kind="PanoramaVariantOutline" Text="屏幕主题色" Margin="0 0 0 8" />
                <materialDesign:Card>
                    <Grid>
                        <ProgressBar Visibility="{Binding WallpaperPickingService.IsWorking, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}" IsIndeterminate="True" VerticalAlignment="Top"/>
                        <StackPanel Margin="12">
                            <controls1:IconText Kind="PaletteOutline" Text="选择主题色" />
                            <Grid VerticalAlignment="Bottom" IsEnabled="{Binding WallpaperPickingService.IsWorking, Mode=OneWay, Converter={StaticResource BooleanToBooleanReConverter}}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <!-- 颜色选择 -->
                                <ListBox Grid.Column="0" HorizontalAlignment="Left" materialDesign:ScrollViewerAssist.BubbleVerticalScroll="True"
                                         ItemsSource="{Binding SettingsService.Settings.WallpaperColorPlatte, Mode=OneWay}"
                                         SelectedIndex="{Binding SettingsService.Settings.SelectedPlatteIndex}"
                                         PreviewMouseWheel="UIElement_OnPreviewMouseWheel">
                                    <ListBox.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <WrapPanel IsItemsHost="True"/>
                                        </ItemsPanelTemplate>
                                    </ListBox.ItemsPanel>
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <materialDesign:ColorZone Background="{Binding Converter={StaticResource ColorToColorPickerBrushConverter}}" Width="32" Height="32" Mode="Custom">
                                                <materialDesign:PackIcon Kind="Check" VerticalAlignment="Bottom" HorizontalAlignment="Right" Width="14" Height="14" Background="White" Foreground="Black"
                                                    Visibility="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            </materialDesign:ColorZone>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <WrapPanel HorizontalAlignment="Right" VerticalAlignment="Center" Grid.Column="1">
                                    <!-- 刷新 -->
                                    <Button Click="ButtonUpdateWallpaper_OnClick" Style="{StaticResource MaterialDesignFlatButton}" VerticalAlignment="Center" Margin="2 0">
                                        <controls1:IconText Kind="Refresh" Text="刷新"/>
                                    </Button>
                                    <!-- 预览提取结果 -->
                                    <Button Click="ButtonPreviewWallpaper_OnClick" Style="{StaticResource MaterialDesignFlatButton}" VerticalAlignment="Center" Margin="2 0">
                                        <controls1:IconText Kind="EyeOutline" Text="预览提取结果"/>
                                    </Button>
                                </WrapPanel>
                            </Grid>
                        </StackPanel>
                    </Grid>
                </materialDesign:Card>
                <!-- 自动提取主题色 -->
                <controls1:SettingsCard Margin="0 6" IconGlyph="ClockOutline" Header="自动提取主题色间隔" Description="自动从屏幕上提取主题色时间隔的时间，建议设为10秒左右。">
                    <controls1:SettingsCard.Switcher>
                        <controls1:NumbericTextBox MaxValue="300" MinValue="0" Width="100" materialDesign:TextFieldAssist.SuffixText="秒" Foreground="{DynamicResource MaterialDesignBody}" Style="{StaticResource MaterialDesignTextBox}"
                                                   Text="{Binding SettingsService.Settings.WallpaperAutoUpdateIntervalSeconds, Mode=TwoWay, Converter={StaticResource IntToStringConverter}}"/>
                    </controls1:SettingsCard.Switcher>
                </controls1:SettingsCard>
                <!-- 取色亮度波峰 -->
                <controls1:SettingsCard IconGlyph="ChartBellCurve" Header="取色亮度波峰" Description="取色时为亮度更接近此值的颜色赋予更高的权重。（默认值：0.6）">
                    <controls1:SettingsCard.Switcher>
                        <controls1:NumbericTextBox MaxValue="1" MinValue="0" Width="100" Foreground="{DynamicResource MaterialDesignBody}" Style="{StaticResource MaterialDesignTextBox}"
                                                   Text="{Binding SettingsService.Settings.TargetLightValue, Mode=TwoWay, Converter={StaticResource IntToStringConverter}}" />
                    </controls1:SettingsCard.Switcher>
                </controls1:SettingsCard>
            </StackPanel>
            <Separator Margin="0 16 0 8" />
            <controls1:IconText Kind="FormatFont" Text="字体" Margin="0 0 0 8" />
            <!-- 自定义字体 -->
            <controls1:SettingsCard IconGlyph="FormatFont" Header="自定义字体"
                                                           Description="自定义主界面显示课表的字体。">
                <controls1:SettingsCard.Switcher>
                    <ComboBox ItemsSource="{Binding ViewModel.FontFamilies}"
                                                      Foreground="{DynamicResource MaterialDesignBody}"
                                                      SelectedItem="{Binding SettingsService.Settings.MainWindowFont, Converter={StaticResource StringToFontFamilyConverter}}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock FontFamily="{Binding}" FontWeight="Normal"
                                                                   ToolTip="{Binding Source}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source}"
                                                                            Value="/ClassIsland;component/Assets/Fonts/#HarmonyOS Sans SC">
                                                    <Setter Property="Text"
                                                                                Value="（默认）HarmonyOS Sans SC" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Text" Value="{Binding Source}" />
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </controls1:SettingsCard.Switcher>
            </controls1:SettingsCard>
            <controls1:SettingsCard IconGlyph="FormatLineWeight" Header="自定义字重"
                                                           Description="自定义主界面显示的字体的字重，需要对应字体支持。">
                <controls1:SettingsCard.Switcher>
                    <ComboBox
                                                SelectedItem="{Binding SettingsService.Settings.MainWindowFontWeight2, Converter={StaticResource IntToFontWeightConverter}}"
                                                Foreground="{DynamicResource MaterialDesignBody}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" FontWeight="{Binding}"
                                                                   ToolTip="{Binding}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <x:Static Member="FontWeights.Thin" />
                        <!--<x:Static Member="FontWeights.UltraLight"/>-->
                        <x:Static Member="FontWeights.ExtraLight" />
                        <x:Static Member="FontWeights.Light" />
                        <x:Static Member="FontWeights.Normal" />
                        <!--<x:Static Member="FontWeights.Regular"/>-->
                        <x:Static Member="FontWeights.Medium" />
                        <!--<x:Static Member="FontWeights.DemiBold"/>-->
                        <x:Static Member="FontWeights.SemiBold" />
                        <x:Static Member="FontWeights.Bold" />
                        <x:Static Member="FontWeights.ExtraBold" />
                        <!--<x:Static Member="FontWeights.UltraBold"/>-->
                        <x:Static Member="FontWeights.Black" />
                        <!--<x:Static Member="FontWeights.Heavy"/>-->
                        <x:Static Member="FontWeights.ExtraBlack" />
                        <!--<x:Static Member="FontWeights.UltraBlack"/>-->
                    </ComboBox>
                </controls1:SettingsCard.Switcher>
            </controls1:SettingsCard>
            <!-- 字体大小 -->
            <materialDesign:Card Margin="0 0 0 6">
                <Expander Background="Transparent"
                          TextBlock.Foreground="{DynamicResource MaterialDesignBody}">
                    <Expander.Header>
                        <controls1:SettingsControl IconGlyph="FontSize"
                                                  Foreground="{DynamicResource MaterialDesignBody}"
                                                  Header="字体大小"
                                                  Description="调整主界面上各类字体的大小。"
                                                  HasSwitcher="False"
                                                  Margin="-12 0" />
                    </Expander.Header>
                    <Grid Margin="36 0 48 12">
                        <Grid.Resources>
                            <Style TargetType="controls1:NumbericTextBox" BasedOn="{StaticResource MaterialDesignTextBoxBase}">
                                <Setter Property="Width" Value="100"/>
                                <Setter Property="materialDesign:TextFieldAssist.SuffixText" Value="px"/>
                                <Setter Property="MinValue" Value="1"/>
                                <Setter Property="MaxValue" Value="40"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Grid.Column="0" Grid.Row="0" Text="次级字体大小（时间点附加信息）" Margin="0 0 0 6" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="0" Grid.Row="1" Text="正文字体大小（主界面）" Margin="0 0 0 6" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="0" Grid.Row="2" Text="强调字体大小（课程表、时钟、提醒标题、天气预报）" Margin="0 0 0 6" VerticalAlignment="Center"/>
                        <TextBlock Grid.Column="0" Grid.Row="3" Text="大号字体大小（课程预报）" Margin="0 0 0 6" VerticalAlignment="Center"/>

                        <controls1:NumbericTextBox
                            Grid.Column="1" Grid.Row="0"
                            Text="{Binding SettingsService.Settings.MainWindowSecondaryFontSize, Converter={StaticResource IntToStringConverter}}"/>
                        <controls1:NumbericTextBox
                            Grid.Column="1" Grid.Row="1"
                            Text="{Binding SettingsService.Settings.MainWindowBodyFontSize, Converter={StaticResource IntToStringConverter}}"/>
                        <controls1:NumbericTextBox
                            Grid.Column="1" Grid.Row="2"
                            Text="{Binding SettingsService.Settings.MainWindowEmphasizedFontSize, Converter={StaticResource IntToStringConverter}}"/>
                        <controls1:NumbericTextBox
                            Grid.Column="1" Grid.Row="3"
                            Text="{Binding SettingsService.Settings.MainWindowLargeFontSize, Converter={StaticResource IntToStringConverter}}"/>
                    </Grid>
                </Expander>
            </materialDesign:Card>
            <!-- 字体颜色 -->
            <controls1:SettingsCard IconGlyph="FormatColorFill"
                                    Header="字体颜色"
                                    Description="调整字体颜色，将覆盖主题默认值。"
                                    Margin="0 0 0 6">
                <controls1:SettingsCard.Switcher>
                    <StackPanel Orientation="Horizontal">
                        <controls1:ColorPicker VerticalAlignment="Center"
                                        Margin="0 0 6 0"
                                        Color="{Binding SettingsService.Settings.CustomForegroundColor, Mode=TwoWay}"
                                        Visibility="{Binding SettingsService.Settings.IsCustomForegroundColorEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        <ToggleButton VerticalAlignment="Center"
                                      IsChecked="{Binding SettingsService.Settings.IsCustomForegroundColorEnabled}" />
                    </StackPanel>
                </controls1:SettingsCard.Switcher>
            </controls1:SettingsCard>
            <!-- 字体预览 -->
            <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                             FontWeight="{Binding SettingsService.Settings.MainWindowFontWeight2, Converter={StaticResource IntToFontWeightConverter}}"
                                             materialDesign:HintAssist.Hint="字体预览"
                                             FontSize="17"
                                             Padding="8"
                                             IsReadOnly="False"
                                             AcceptsReturn="True"
                                             FontFamily="{Binding SettingsService.Settings.MainWindowFont, Mode=OneWay}"
                                             Margin="0 4 0 0"
                                             TextAlignment="Center"
                                             xml:space="preserve">送给你纯白色的花 塞西莉亚 塞西莉亚
盛开在起风的地方 沐浴九月的骄阳
语文 数学 英语 历史 物理 政治 化学 生物 地理
The quick brown fox jumps over a lazy dog
:1:234567890 +-*/:</TextBox>
        </StackPanel>
    </ScrollViewer>
</controls:SettingsPageBase>
