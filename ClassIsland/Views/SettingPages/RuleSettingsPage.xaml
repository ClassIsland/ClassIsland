<ci:SettingsPageBase x:Class="ClassIsland.Views.SettingPages.RuleSettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:ClassIsland.Views.SettingPages"
      xmlns:ci="http://classisland.tech/schemas/xaml/core"
      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
      xmlns:converters="clr-namespace:ClassIsland.Core.Abstractions.Converters;assembly=ClassIsland.Core"
      xmlns:services="clr-namespace:ClassIsland.Core.Abstractions.Services;assembly=ClassIsland.Core"
      xmlns:actions="clr-namespace:ClassIsland.Core.Controls.Action;assembly=ClassIsland.Core"
      mc:Ignorable="d"
      d:DesignHeight="450" d:DesignWidth="800"
      TextElement.Foreground="{DynamicResource MaterialDesignBody}"
      Background="{DynamicResource MaterialDesignPaper}"
      FontFamily="{StaticResource HarmonyOsSans}"
      TextElement.FontWeight="Regular"
      TextElement.FontSize="14"
      TextOptions.TextFormattingMode="Ideal"
      TextOptions.TextRenderingMode="Auto"
      d:DataContext="{d:DesignInstance local:RuleSettingsPage}"
      Title="RuleSettingsPage">
    <ci:SettingsPageBase.CommandBindings>
        <CommandBinding Command="{x:Static local:RuleSettingsPage.AddRuleCommand}" Executed="CommandAddRule_OnExecuted"/>
        <CommandBinding Command="{x:Static local:RuleSettingsPage.RemoveRuleCommand}" Executed="CommandRemoveRuleCommand_OnExecuted"/>
        <CommandBinding Command="{x:Static local:RuleSettingsPage.RemoveRulesetCommand}" Executed="CommandRemoveRulesetCommand_OnExecuted"/>
        <CommandBinding Command="{x:Static local:RuleSettingsPage.DuplicateRulesetCommand}" Executed="CommandDuplicateRuleset_OnExecuted"/>
        <CommandBinding Command="{x:Static local:RuleSettingsPage.DebugInvokeActionCommand}" Executed="CommandDebugInvokeAction_OnExecuted"/>
        <CommandBinding Command="{x:Static local:RuleSettingsPage.DebugInvokeBackActionCommand}" Executed="CommandDebugInvokeBackAction_OnExecuted"/>
    </ci:SettingsPageBase.CommandBindings>
    <ci:SettingsPageBase.Resources>
        <converters:RuleLogicalModeToIntConverter x:Key="RuleLogicalModeToIntConverter"/>
        <ci:RuleLogicalModeToBooleanConverter x:Key="RuleLogicalModeToBooleanConverter"/>
    </ci:SettingsPageBase.Resources>
    <ScrollViewer>
        <StackPanel>
            <Grid DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:RuleSettingsPage}}">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <!-- 规则编辑 -->
                <ItemsControl Grid.Row="0" ItemsSource="{Binding Rulesets}"
                         HorizontalContentAlignment="Stretch">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <materialDesign:Card Padding="5" Margin="5">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <!--规则编辑-->
                                    <!--<DockPanel  Grid.Column="0" VerticalAlignment="Stretch" LastChildFill="False">
                                        <StackPanel DockPanel.Dock="Top">
                                            <StackPanel Orientation="Horizontal" Grid.Row="0" x:Name="OpacityBindingPanel">
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Groups[0].IsEnabled}" Value="False">
                                                                <Setter Property="Opacity" Value="0.56"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Groups[0].Rules.Count}" Value="1">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding Groups[0].Rules.Count}" Value="0">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </StackPanel.Style>


                                                --><!--<ToggleButton
                                                    Margin="8 0"
                                                    HorizontalAlignment="Center"
                                                    VerticalAlignment="Center"
                                                    Content="{materialDesign:PackIcon SelectMultiple}"
                                                    materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon SelectGroup}"
                                                    IsChecked="{Binding Groups[0].Mode, Converter={StaticResource RuleLogicalModeToBooleanConverter}}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignActionToggleButton}">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsChecked" Value="False">
                                                                    <Setter Property="ToolTip" Value="任一条件满足。" />
                                                                    <Setter Property="Foreground" Value="White" />
                                                                    <Setter Property="Background" Value="Gray" />
                                                                </Trigger>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="ToolTip" Value="所有条件满足。" />
                                                                    <Setter Property="Background" Value="Black" />
                                                                    <Setter Property="Foreground" Value="White" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>-->

                                                <!--<CheckBox Content="反转" IsChecked="{Binding Groups[0].IsReversed}"/>--><!--


                                                <ToggleButton
                                                                        HorizontalAlignment="Center"
                                                                        VerticalAlignment="Center"
                                                                        Content="{materialDesign:PackIcon ArrowRight}"
                                                                        materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon CompareHorizontal}"
                                                                        IsChecked="{Binding Groups[0].IsReversed}">
                                                    <ToggleButton.Style>
                                                        <Style TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignActionToggleButton}">
                                                            <Style.Triggers>
                                                                <Trigger Property="IsChecked" Value="True">
                                                                    <Setter Property="ToolTip" Value="反转此规则判断结果。" />
                                                                    <Setter Property="Background" Value="Black"/>
                                                                    <Setter Property="Foreground" Value="White"/>
                                                                </Trigger>
                                                                <Trigger Property="IsChecked" Value="False">
                                                                    <Setter Property="ToolTip" Value="判断此规则。" />
                                                                    <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
                                                                    <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                                                                </Trigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </ToggleButton.Style>
                                                </ToggleButton>

                                                <ComboBox SelectedIndex="{Binding Groups[0].Mode, Converter={StaticResource RuleLogicalModeToIntConverter}}"
                                                            Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                                            materialDesign:HintAssist.Hint="模式" Margin="4 0 10 0">
                                                    <ComboBoxItem>
                                                        <ci:IconText Kind="SelectMultiple" Text="任意条件满足时"/>
                                                    </ComboBoxItem>
                                                    <ComboBoxItem>
                                                        <ci:IconText Kind="SelectGroup" Text="所有条件满足时"/>
                                                    </ComboBoxItem>
                                                </ComboBox>
                                                
                                            </StackPanel>
                                            <ItemsControl Grid.Row="1" ItemsSource="{Binding Groups[0].Rules}" Opacity="{Binding Opacity, ElementName=OpacityBindingPanel}"
                                                 HorizontalContentAlignment="Stretch">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Margin="0 5">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition Width="Auto"/>
                                                            </Grid.ColumnDefinitions>
                                                            <StackPanel Margin="0 4">
                                                                <StackPanel Orientation="Horizontal">
                                                                    <ToggleButton
                                                                        Margin="0 0 8 0"
                                                                        HorizontalAlignment="Center"
                                                                        VerticalAlignment="Center"
                                                                        Content="{materialDesign:PackIcon ArrowRight}"
                                                                        materialDesign:ToggleButtonAssist.OnContent="{materialDesign:PackIcon CompareHorizontal}"
                                                                        IsChecked="{Binding IsReversed}">
                                                                        <ToggleButton.Style>
                                                                            <Style TargetType="ToggleButton" BasedOn="{StaticResource MaterialDesignActionToggleButton}">
                                                                                <Style.Triggers>
                                                                                    <Trigger Property="IsChecked" Value="True">
                                                                                        <Setter Property="ToolTip" Value="反转此规则判断结果。" />
                                                                                        <Setter Property="Background" Value="Black"/>
                                                                                        <Setter Property="Foreground" Value="White"/>
                                                                                    </Trigger>
                                                                                    <Trigger Property="IsChecked" Value="False">
                                                                                        <Setter Property="ToolTip" Value="正常判断此规则。" />
                                                                                        <Setter Property="Foreground" Value="{DynamicResource SecondaryHueMidBrush}" />
                                                                                        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}" />
                                                                                    </Trigger>
                                                                                </Style.Triggers>
                                                                            </Style>
                                                                        </ToggleButton.Style>
                                                                    </ToggleButton>
                                                                    <ComboBox Grid.Column="2"
                                                                        SelectedValue="{Binding Id}"
                                                                        SelectedValuePath="Key"
                                                                        ItemsSource="{x:Static services:IRulesetService.Rules}">
                                                                        <ComboBox.ItemTemplate>
                                                                            <DataTemplate>
                                                                                <ci:IconText Kind="{Binding Value.IconKind}" Text="{Binding Value.Name}"/>
                                                                            </DataTemplate>
                                                                        </ComboBox.ItemTemplate>
                                                                    </ComboBox>
                                                                    --><!--<CheckBox Grid.Column="1"
                                                                        Content="反转" IsChecked="{Binding IsReversed}"
                                                                        Margin="0 0 5 0"/>--><!--
                                                                </StackPanel>
                                                                <ci:RulesetSettingsControlPresenter Rule="{Binding Mode=OneWay}"
                                                                                            RuleId="{Binding Id, Mode=OneWay}"
                                                                                            HorizontalAlignment="Left" MinWidth="200"
                                                                                                Margin="22 0 0 0"/>
                                                            </StackPanel>
                                                            <Button Grid.Column="1"
                                                                        Content="{materialDesign:PackIcon Remove}" ToolTip="删除"
                                                                        Style="{StaticResource MaterialDesignToolForegroundButton}"
                                                                        Command="{x:Static local:RuleSettingsPage.RemoveRuleCommand}" CommandParameter="{Binding}"/>
                                                        </Grid>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </StackPanel>

                                        <Button Style="{StaticResource MaterialDesignFlatButton}" Padding="8 0"
                                                DockPanel.Dock="Bottom"
                                                    Command="{x:Static local:RuleSettingsPage.AddRuleCommand}" CommandParameter="{Binding}"
                                                    VerticalAlignment="Top"
                                                Opacity="{Binding Opacity, ElementName=OpacityBindingPanel}">
                                            <ci:IconText Kind="TagPlusOutline" Text="添加规则"/>
                                        </Button>
                                    </DockPanel>-->
                                    <ci:RulesetControl Ruleset="{Binding}"/>

                                    <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Width="5" Margin="4 0"
                                                Opacity="{Binding Opacity, ElementName=OpacityBindingPanel}"/>

                                    <!--行动编辑-->
                                    <actions:ActionControl Actions="{Binding Actions}" Opacity="{Binding Opacity, ElementName=OpacityBindingPanel}"
                                                           Grid.Column="2"/>


                                    <!--规则组操作-->
                                    <WrapPanel Orientation="Horizontal" Grid.Column="2" VerticalAlignment="Top" HorizontalAlignment="Right">
                                        <Button Content="{materialDesign:PackIcon Kind=Close}" ToolTip="删除"
                                                                Style="{StaticResource MaterialDesignToolForegroundButton}"
                                                                Command="{x:Static local:RuleSettingsPage.RemoveRulesetCommand}" CommandParameter="{Binding}"
                                                                Margin="0 0 4 0"/>

                                        <Button Content="{materialDesign:PackIcon Kind=ContentCopy}" ToolTip="复制"
                                                                Style="{StaticResource MaterialDesignToolForegroundButton}"
                                                                Command="{x:Static local:RuleSettingsPage.DuplicateRulesetCommand}" CommandParameter="{Binding}"
                                                                Margin="0 0 4 0"/>

                                        <Button Content="(Debug)触发"
                                                Style="{StaticResource MaterialDesignToolForegroundButton}"
                                                Command="{x:Static local:RuleSettingsPage.DebugInvokeActionCommand}" CommandParameter="{Binding}"
                                                Margin="0 0 4 0"/>

                                        <Button Content="(Debug)恢复"
                                                Style="{StaticResource MaterialDesignToolForegroundButton}"
                                                Command="{x:Static local:RuleSettingsPage.DebugInvokeBackActionCommand}" CommandParameter="{Binding}"
                                                Margin="0 0 4 0"/>

                                        <ToggleButton ToolTip="启用" IsChecked="{Binding Groups[0].IsEnabled}" Margin="0 0 4 0"/>
                                    </WrapPanel>
                                </Grid>
                            </materialDesign:Card>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <StackPanel Grid.Row="1">
                    <WrapPanel Orientation="Horizontal">
                        <Button Style="{StaticResource MaterialDesignFlatButton}" Click="ButtonAddRule_OnClick">
                            <ci:IconText Kind="Add" Text="添加条件触发"/>
                        </Button>
                    </WrapPanel>
                </StackPanel>
            </Grid>
        </StackPanel>
    </ScrollViewer>
</ci:SettingsPageBase>
