<controls1:MyWindow x:Class="ClassIsland.Views.ProfileSettingsWindow"
                   xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                   xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                   xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                   xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                   xmlns:local="clr-namespace:ClassIsland.Views"
                   xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                   xmlns:models="clr-namespace:ClassIsland.Models"
                   xmlns:controls="clr-namespace:ClassIsland.Controls"
                   xmlns:generic="clr-namespace:System.Collections.Generic;assembly=System.Runtime"
                   xmlns:converters="clr-namespace:ClassIsland.Converters"
                   xmlns:dd="urn:gong-wpf-dragdrop"
                   xmlns:validations="clr-namespace:ClassIsland.Validations"
                   xmlns:system="clr-namespace:System;assembly=System.Runtime"
                   xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
                   xmlns:behaviors="clr-namespace:ClassIsland.Behaviors"
                   xmlns:classIsland="clr-namespace:ClassIsland"
                   xmlns:viewModels="clr-namespace:ClassIsland.ViewModels"
                   xmlns:windows="clr-namespace:Walterlv.Windows;assembly=ClassIsland.Core"
                   xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                   xmlns:profile="clr-namespace:ClassIsland.Shared.Models.Profile;assembly=ClassIsland.Shared"
                   xmlns:converters1="clr-namespace:ClassIsland.Core.Converters;assembly=ClassIsland.Core"
                   xmlns:controls1="clr-namespace:ClassIsland.Core.Controls;assembly=ClassIsland.Core"
                   xmlns:services="clr-namespace:ClassIsland.Core.Abstractions.Services;assembly=ClassIsland.Core"
                   xmlns:controls2="clr-namespace:WpfToolkit.Controls;assembly=VirtualizingWrapPanel"
                   xmlns:ci="http://classisland.tech/schemas/xaml/core"
                   mc:Ignorable="d" 
                   d:DesignHeight="450" d:DesignWidth="800"
                   TextElement.Foreground="{DynamicResource MaterialDesignBody}"
                   Background="{DynamicResource MaterialDesignPaper}"
                   TextElement.FontWeight="Regular"
                   TextElement.FontSize="14"
                   FontFamily="{StaticResource HarmonyOsSans}"
                   Title="档案编辑"
                   d:DataContext="{d:DesignInstance local:ProfileSettingsWindow}"
                   Icon="/Assets/AppLogo.ico"
                   Closing="ProfileSettingsWindow_OnClosing"
                   MinWidth="750"
                   AllowDrop="True"
                   DragEnter="ProfileSettingsWindow_OnDragEnter"
                   DragLeave="ProfileSettingsWindow_OnDragLeave"
                   Drop="ProfileSettingsWindow_OnDrop"
                   Button.Click="GlobalUpdated"
                   ListBox.SelectionChanged="GlobalUpdated">
    <Window.CommandBindings>
        <CommandBinding Command="{x:Static local:ProfileSettingsWindow.OpenTimeLayoutItemEditorCommand}" Executed="ButtonEditTimePoint_OnClick"/>
        <CommandBinding Command="{x:Static local:ProfileSettingsWindow.RemoveSelectedTimeLayoutItemCommand}" Executed="ButtonRemoveTimePoint_OnClick"/>
    </Window.CommandBindings>
    <Window.Resources>
        <converters1:KeyValuePairToValueConverter x:Key="KeyValuePairToValueConverter" />
        <profile:TimeLayoutItem x:Key="TimeLayoutItemFallback"/>
        <converters1:SubjectsDictionaryValueAccessConverter x:Key="DictionaryValueAccessConverter"/>
        <converters1:SubjectIdToSubjectConverter x:Key="SubjectIdToSubjectConverter"/>
        <converters1:ClassPlanGroupIdToClassPlanGroupConverter x:Key="ClassPlanGroupIdToClassPlanGroupConverter"/>
        <converters1:ClassPlanDictionaryValueAccessConverter x:Key="ClassPlanDictionaryValueAccessConverter"/>
        <Style BasedOn="{StaticResource MaterialDesignDataGridComboBox}" TargetType="{x:Type ComboBox}" x:Key="ClassPlanDataGridComboBoxStyle">
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <ContentPresenter>
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate DataType="{x:Type profile:Subject}">
                                    <TextBlock Text="{Binding Name}"/>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                            <ContentPresenter.Content>
                                <MultiBinding Converter="{StaticResource SubjectIdToSubjectConverter}">
                                    <Binding Path="ProfileService.Profile.Subjects" RelativeSource="{RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}"/>
                                    <Binding />
                                </MultiBinding>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- 时间表信息 -->
        <ScrollViewer x:Key="TimeLayoutInfoEditor" Width="332" VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="16"  
                        DataContext="{Binding SelectedItem, ElementName=ListViewTimeLayouts}">
                <TextBlock Text="时间表信息" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
                <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}"
                         Margin="0 12 0 0"
                         Text="{Binding Value.Name}"
                         materialDesign:HintAssist.Hint="名称"/>
                <!-- 附加属性 -->
                <Separator Margin="0 16 0 8"/>
                <controls1:IconText Kind="CogOutline" Text="更多选项" Margin="0 0 0 8"/>
                <ItemsControl ItemsSource="{x:Static services:IAttachedSettingsHostService.TimeLayoutSettingsAttachedSettingsControls}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <controls1:AttachedSettingsControlPresenter ControlInfo="{Binding}" 
                                                                       Margin="0 0 0 8"
                                                                       ContentId="{Binding SelectedItem.Key, ElementName=ListViewTimeLayouts, Mode=OneWay}"
                                                                       TargetObject="{Binding SelectedItem.Value, ElementName=ListViewTimeLayouts}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
                <StackPanel Orientation="Horizontal" Margin="0 16 0 0">
                    <materialDesign:PackIcon Kind="Code" VerticalAlignment="Center" 
                                             Margin="0 0 3 0"/>
                    <TextBlock VerticalAlignment="Center" TextWrapping="Wrap"
                               Text="{Binding Key, Mode=OneWay}">
                    </TextBlock>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>

        <!-- 时间节点编辑 -->
        <ScrollViewer x:Key="TimePointEditor" Width="332" VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="16">
                <TextBlock Text="Obsolete."/>
            </StackPanel>
        </ScrollViewer>

        <!-- 删除时间表确认 -->
        <StackPanel x:Key="DeleteTimeLayoutConfirm" VerticalAlignment="Stretch" Margin="16" MaxWidth="400">
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}">
                <Run Text="删除"/>
                <Run Text="{Binding SelectedItem.Value.Name, ElementName=ListViewTimeLayouts}"/>
            </TextBlock>
            <TextBlock Margin="0 6 0 0" TextWrapping="Wrap">
                <Run Text="确定要删除时间表"/>
                <Run Text="{Binding SelectedItem.Value.Name, ElementName=ListViewTimeLayouts}"/>
                <Run Text="吗？如果有与此时间表关联的课程表，那么这些课程表在时间表删除后将无法正常工作！"/>
            </TextBlock>
            <StackPanel Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                <Button Content="删除" IsDefault="True" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" >
                    <Button.CommandParameter>
                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                            True
                        </system:Boolean>
                    </Button.CommandParameter>
                </Button>
                <Button Content="取消" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="6 0 0 0">
                    <Button.CommandParameter>
                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                            False
                        </system:Boolean>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
        </StackPanel>

        <!-- 删除科目确认 -->
        <StackPanel x:Key="DeleteSubjectConfirm" VerticalAlignment="Stretch" Margin="16" MaxWidth="400">
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}">
                <Run Text="删除"/>
                <Run Text="{Binding SelectedItem.Value.Name, ElementName=ListViewSubjects}"/>
            </TextBlock>
            <TextBlock Margin="0 6 0 0" TextWrapping="Wrap">
                <Run Text="确定要删除选中的科目吗？如果有包含此科目的课程表，那么这些课程表在科目删除后将无法正常工作！"/>
            </TextBlock>
            <StackPanel Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                <Button Content="删除" IsDefault="True" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" >
                    <Button.CommandParameter>
                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                            True
                        </system:Boolean>
                    </Button.CommandParameter>
                </Button>
                <Button Content="取消" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="6 0 0 0">
                    <Button.CommandParameter>
                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                            False
                        </system:Boolean>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
        </StackPanel>

        <!-- 删除课表确认 -->
        <StackPanel x:Key="DeleteClassPlanConfirm" VerticalAlignment="Stretch" Margin="16" MaxWidth="400">
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}">
                <Run Text="删除"/>
                <Run Text="{Binding SelectedItem.Value.Name, ElementName=ListViewClassPlans}"/>
            </TextBlock>
            <TextBlock Margin="0 6 0 0" TextWrapping="Wrap">
                <Run Text="确定要删除课表"/>
                <Run Text="{Binding SelectedItem.Value.Name, ElementName=ListViewClassPlans}"/>
                <Run Text="吗？"/>
            </TextBlock>
            <StackPanel Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                <Button Content="删除" IsDefault="True" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" >
                    <Button.CommandParameter>
                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                            True
                        </system:Boolean>
                    </Button.CommandParameter>
                </Button>
                <Button Content="取消" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="6 0 0 0">
                    <Button.CommandParameter>
                        <system:Boolean xmlns:system="clr-namespace:System;assembly=mscorlib">
                            False
                        </system:Boolean>
                    </Button.CommandParameter>
                </Button>
            </StackPanel>
        </StackPanel>

        <!-- 课程表信息 -->
        <converters1:BooleanOrExpressionMultiConverter x:Key="BooleanOrExpressionMultiConverter" />
        <ScrollViewer x:Key="ClassPlansInfoEditor" Width="332"
                      VerticalScrollBarVisibility="Auto">
            <StackPanel DataContext="{Binding SelectedItem.Value, ElementName=ListViewClassPlans}"
                        Margin="16">
                <TextBlock Text="课程表信息" Style="{StaticResource MaterialDesignHeadline5TextBlock}" />
                <Border Padding="14" 
                        Visibility="{Binding IsOverlay, Converter={StaticResource BooleanToVisibilityConverter}}"
                        Margin="0 8 0 0"
                        BorderBrush="{DynamicResource MaterialDesignDivider}" 
                        BorderThickness="1" CornerRadius="8">
                    <StackPanel>
                        <materialDesign:PackIcon Kind="InfoCircleOutline" Foreground="{DynamicResource PrimaryHueMidBrush}"/>
                        <TextBlock TextWrapping="Wrap" FontSize="13" Margin="0 4 0 0">
                            这是一个临时层课表，将在使用过后自动删除。
                        </TextBlock>
                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                HorizontalAlignment="Left"
                                Padding="4"
                                Margin="0 4 0 0"
                                FontSize="13"
                                Click="ButtonConvertToStdClassPlan_OnClick"
                                ToolTip="将当前临时层课表转换为正常课表。">
                            <controls1:IconText Kind="CogTransferOutline" Text="转换为普通课表"/>
                        </Button>
                        <!--<Button Style="{StaticResource MaterialDesignFlatButton}"
                                HorizontalAlignment="Left"
                                Padding="4"
                                Margin="0 2 0 0"
                                FontSize="13">
                            <controls:IconText Kind="FileReplaceOutline" Text="覆盖原课表"/>
                        </Button>-->
                    </StackPanel>
                </Border>
                <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}"
                         Margin="0 12 0 0"
                         Text="{Binding Name}"
                         materialDesign:HintAssist.Hint="名称" />
                <ComboBox Style="{StaticResource MaterialDesignOutlinedComboBox}"
                          x:Name="ComboBox1"
                          Margin="0 12 0 0"
                          materialDesign:HintAssist.Hint="时间表"
                          SelectedItem="{Binding TimeLayoutId, Converter={StaticResource ClassPlanDictionaryValueAccessConverter}}"
                          ItemsSource="{Binding MainViewModel.Profile.TimeLayouts, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ProfileSettingsWindow}}}">
                    <ComboBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource BooleanOrExpressionMultiConverter}">
                            <Binding Path="IsActivated" Converter="{StaticResource InvertBooleanConverter}" Mode="OneWay"/>
                            <Binding Path="MainViewModel.Settings.ExpAllowEditingActivatedTimeLayout" RelativeSource="{RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}" />
                        </MultiBinding>
                    </ComboBox.IsEnabled>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Value.Name}"
                                       ToolTip="{Binding Key}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox Style="{StaticResource MaterialDesignOutlinedComboBox}"
                          Margin="0 12 0 0"
                          materialDesign:HintAssist.Hint="课表群"
                          SelectedValue="{Binding AssociatedGroup, Mode=TwoWay}"
                          SelectedValuePath="Key"
                          SelectionChanged="ComboBoxClassPlanGroup_OnSelectionChanged"
                          ItemsSource="{Binding ProfileService.Profile.ClassPlanGroups, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ProfileSettingsWindow}}}">
                    <ComboBox.IsEnabled>
                        <MultiBinding Converter="{StaticResource BooleanOrExpressionMultiConverter}">
                            <Binding Path="IsActivated" Converter="{StaticResource InvertBooleanConverter}" Mode="OneWay"/>
                            <Binding Path="MainViewModel.Settings.ExpAllowEditingActivatedTimeLayout" RelativeSource="{RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}" />
                        </MultiBinding>
                    </ComboBox.IsEnabled>
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Value.Name}"
                                       ToolTip="{Binding Key}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <TextBlock Text="部分设置在课表处于活动状态下无法修改。" Margin="0 16 0 0" Visibility="{Binding IsActivated, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <CheckBox IsEnabled="{Binding IsOverlay, Converter={StaticResource InvertBooleanConverter}}" Margin="0 8 0 0" Content="自动启用" IsChecked="{Binding IsEnabled}"/>
                <TextBlock Text="临时层课表将忽略触发规则强制启用。" 
                           Margin="0 0 0 4"
                           Visibility="{Binding IsOverlay, Converter={StaticResource BooleanToVisibilityConverter}}" TextWrapping="Wrap"/>
                <TextBlock Text="当课表设置为自动启用时，将会根据触发规则自动启用该课表。否则只能通过临时课表或临时层手动启用该课表。" 
                           Visibility="{Binding IsOverlay, Converter={StaticResource InverseBoolToVisConverter}}"
                           TextWrapping="Wrap"/>

                <StackPanel IsEnabled="{Binding IsOverlay, Converter={StaticResource InvertBooleanConverter}}" 
                            Visibility="{Binding IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <controls1:TimeRuleEditControl TimeRule="{Binding TimeRule, Mode=OneWay}"/>
                </StackPanel>
                <!-- 附加属性 -->
                <Separator Margin="0 16 0 8"/>
                <controls1:IconText Kind="CogOutline" Text="更多选项" Margin="0 0 0 8"/>
                <ItemsControl ItemsSource="{x:Static services:IAttachedSettingsHostService.ClassPlanSettingsAttachedSettingsControls}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <controls1:AttachedSettingsControlPresenter ControlInfo="{Binding}"
                                                                       Margin="0 0 0 8"
                                                                       ContentId="{Binding SelectedItem.Key, ElementName=ListViewClassPlans, Mode=OneWay}"
                                                                       TargetObject="{Binding SelectedItem.Value, ElementName=ListViewClassPlans}"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </StackPanel>
        </ScrollViewer>

        <!-- 课程表规则编辑 -->
        <StackPanel Margin="16" Width="300" x:Key="ClassPlanRulesEditor">
            <TextBlock Text="Deprecated."/>
        </StackPanel>

        <!-- 课程表规则编辑 -->
        <converters1:PreventNullConverter x:Key="PreventNullConverter" />
        <Grid  Margin="16" Width="300" x:Key="TemporaryClassPlan">
            <Grid.Resources>
                <CollectionViewSource x:Key="ClassPlanSource" 
                                      Source="{Binding MainViewModel.Profile.ClassPlans}"
                                      Filter="ClassPlanSource_OnFilter"/>
            </Grid.Resources>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0">
                    <TextBlock Text="当前启用的课表" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
                    <StackPanel Orientation="Horizontal" Margin="0 8 0 0">
                        <ToggleButton VerticalAlignment="Center" Margin="0 0 4 0" IsChecked="{Binding LessonsService.IsClassPlanEnabled}"/>
                        <TextBlock Text="加载课表" VerticalAlignment="Center"/>
                    </StackPanel>

                    <StackPanel>
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ProfileService.Profile.OverlayClassPlanId}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <Separator Margin="0 16 0 4"/>
                        <controls1:IconText Kind="LayersOutline" Text="临时层" Margin="0 0 0 8"/>
                        <TextBlock Text="临时层课表将优先于临时课表应用。临时层课表将在该课表过期后自动清除。"
                                   TextWrapping="Wrap"
                                   Margin="0 0 0 4"/>
                        <StackPanel Orientation="Horizontal">
                            <ToggleButton VerticalAlignment="Center" Margin="0 0 4 0"
                                          IsChecked="{Binding ProfileService.Profile.IsOverlayClassPlanEnabled}"/>
                            <TextBlock Text="启用临时层" VerticalAlignment="Center"/>
                        </StackPanel>
                        <Button Style="{StaticResource MaterialDesignFlatButton}" Margin="0 4 0 0"
                                HorizontalAlignment="Left"
                                Click="ButtonClearTempOverlay_OnClick"
                                ToolTip="清除临时层课表。">
                            <controls1:IconText Kind="ClearOutline" Text="清除临时层"/>
                        </Button>
                    </StackPanel>

                    <Separator Margin="0 16 0 4"/>
                    <controls1:IconText Kind="FileChartOutline" Text="临时课表" Margin="0 0 0 8"/>
                    <TextBlock Text="若当天授课计划有变，可临时选择某一课表作为当天的课表。该设置仅在当天有效。" TextWrapping="Wrap"/>
                    <Button Style="{StaticResource MaterialDesignFlatButton}" 
                            HorizontalAlignment="Left"
                            ToolTip="清除选择的临时课表，并恢复至正常课表安排。"
                            Margin="0 6 0 0"
                            Click="ButtonClearTemporaryClassPlan_OnClick"
                            Visibility="{Binding ProfileService.Profile.IsOverlayClassPlanEnabled, Converter={StaticResource InverseBoolToVisConverter}}">
                        <controls1:IconText Kind="ClearOutline" Text="清除临时课表"/>
                    </Button>
                    <TextBlock Text="临时课表被临时层课表覆盖。要使用临时课表，请暂时禁用或清除临时层课表。"
                               TextWrapping="Wrap"
                               Margin="0 4 0 0"
                               Visibility="{Binding ProfileService.Profile.IsOverlayClassPlanEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </StackPanel>
                <ListBox Grid.Row="1" ItemsSource="{Binding Source={StaticResource ClassPlanSource}}"
                         Margin="0 12 0 0"
                         SelectionMode="Single"
                         Visibility="{Binding ProfileService.Profile.IsOverlayClassPlanEnabled, Converter={StaticResource InverseBooleanToVisibilityConverter}}"
                         SelectedValue="{Binding ProfileService.Profile.TempClassPlanId, Mode=TwoWay, Converter={StaticResource PreventNullConverter}}"
                         SelectedValuePath="Key"
                         SelectionChanged="ListBoxTempClassPlanSelector_OnSelectionChanged"
                         HorizontalContentAlignment="Stretch"
                         VerticalContentAlignment="Stretch">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}, Mode=OneWay}"
                                      Content="{Binding Value.Name}"
                                      IsHitTestVisible="False"
                                      Focusable="False"
                                      HorizontalAlignment="Stretch"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <StackPanel Grid.Row="2">
                    <Separator Margin="0 16 0 4" />
                    <controls1:IconText Kind="CalendarOutline" Text="多周轮换偏移" Margin="0 0 0 8" />
                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                            HorizontalAlignment="Left"
                            Click="ButtonOpenWeekOffsetSettings_OnClick">
                        <ci:IconText Kind="CalendarMultiple" Text="调整多周轮换偏移…"/>
                    </Button>
                </StackPanel>
                <materialDesign:PopupEx Grid.Row="2"
                                        AllowsTransparency="True"
                                        StaysOpen="False"
                                        Placement="Mouse"
                                        IsOpen="{Binding ViewModel.IsWeekOffsetSettingsOpen}"
                                        PopupAnimation="Fade">
                    <Border Background="{DynamicResource MaterialDesignPaper}"
                            Margin="8"
                            Button.Click="ButtonWeekOffsetSettingsButtons_OnClick">
                        <Border.Effect>
                            <DropShadowEffect Direction="0"
                                              ShadowDepth="0"
                                              BlurRadius="8"
                                              Opacity="0.5"/>
                        </Border.Effect>
                        <controls:WeekOffsetSettingsControl/>
                    </Border>
                </materialDesign:PopupEx>
            </Grid>
        </Grid>

        <!-- 新建档案 -->
        <StackPanel x:Key="CreateProfileDialog" VerticalAlignment="Stretch" Margin="16" MaxWidth="400">
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}" Text="新建档案"/>
            <TextBox Margin="0 6 0 0" TextWrapping="Wrap" x:Name="TextBoxProfileName" 
                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                     Text="{Binding ViewModel.CreateProfileName}"
                     materialDesign:HintAssist.Hint="档案名"
                     materialDesign:TextFieldAssist.SuffixText=".json"/>
            <StackPanel Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                <Button Content="新建" IsDefault="True" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" 
                        CommandParameter="{Binding ViewModel.CreateProfileName, Mode=OneWay}"/>
                <Button Content="取消" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="6 0 0 0" CommandParameter="{x:Null}"/>
            </StackPanel>
        </StackPanel>

        <!-- 重命名档案 -->
        <StackPanel x:Key="RenameProfileDialog" VerticalAlignment="Stretch" Margin="16" MaxWidth="400">
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}" Text="重命名档案"/>
            <TextBox Margin="0 6 0 0" TextWrapping="Wrap"
                     Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                     Text="{Binding ViewModel.RenameProfileName}"
                     materialDesign:HintAssist.Hint="档案名"
                     materialDesign:TextFieldAssist.SuffixText=".json"/>
            <StackPanel Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                <Button Content="重命名" IsDefault="True" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" 
                        CommandParameter="{Binding ViewModel.RenameProfileName, Mode=OneWay}"/>
                <Button Content="取消" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="6 0 0 0" CommandParameter="{x:Null}"/>
            </StackPanel>
        </StackPanel>

        <!-- 删除档案 -->
        <converters1:StringConnectConverter x:Key="StringConnectConverter" />
        <StackPanel x:Key="DeleteProfileDialog" VerticalAlignment="Stretch" Margin="16" MaxWidth="400">
            <TextBlock Style="{StaticResource MaterialDesignHeadline6TextBlock}" Text="删除档案"/>
            <TextBlock TextWrapping="Wrap" Margin="0 12 0 0">
                <Run Text="你确定要删除这个档案吗？一旦删除，这个操作将无法撤销，该档案的所有数据都将丢失！"/>
            </TextBlock>
            <controls1:IconText Text="{Binding ViewModel.SelectedProfile}" HorizontalAlignment="Center"
                               Margin="0 6 0 0"
                               Kind="FileDocumentOutline"
                               FontFamily="Consolas"/>
            <StackPanel Orientation="Horizontal" Margin="0 8 0 0" HorizontalAlignment="Right">
                <Grid HorizontalAlignment="Right">
                    <Button Content="删除" 
                            IsDefault="True"
                            Style="{DynamicResource MaterialDesignFlatButton}" 
                            Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}">
                        <Button.CommandParameter>
                            <system:Boolean xmlns:system="clr-namespace:System;assembly=System.Runtime">
                                True
                            </system:Boolean>
                        </Button.CommandParameter>
                    </Button>
                </Grid>
                <Button Content="取消" HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignFlatButton}" Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}" Margin="6 0 0 0" CommandParameter="{x:Null}"/>
            </StackPanel>
        </StackPanel>

        <!-- 管理档案 -->
        <Grid x:Key="ProfileManager" Margin="16" Width="300">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" >
                <TextBlock Text="管理档案" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
                <TextBlock Text="管理与切换保存的档案。切换档案需要重新启动应用。" TextWrapping="Wrap"
                           Margin="0 6 0 0"/>
                <!--<TextBlock Text="{Binding MainViewModel.Settings.SelectedProfile, Mode=OneWay}"/>-->
                <WrapPanel Margin="0 6 0 0">
                    <WrapPanel.Resources>
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                            <Setter Property="Margin" Value="0 0 6 0"/>
                        </Style>
                    </WrapPanel.Resources>
                    <Button ToolTip="新建档案。" Click="ButtonCreateProfile_OnClick">
                        <controls1:IconText Kind="FileDocumentAddOutline" Text="新建档案"/>
                    </Button>
                    <Button ToolTip="打开档案文件夹。" Click="ButtonOpenProfileFolder_OnClick">
                        <controls1:IconText Kind="FolderOpenOutline" Text="打开文件夹"/>
                    </Button>
                    <Button ToolTip="重新加载档案列表。" Click="ButtonRefreshProfiles_OnClick">
                        <controls1:IconText Kind="Refresh" Text="刷新"/>
                    </Button>
                </WrapPanel>
            </StackPanel>
            <ListBox Grid.Row="1" Margin="0 12 0 0"
                     SelectedValue="{Binding ViewModel.SelectedProfile, Mode=TwoWay}"
                     SelectionMode="Single"
                     HorizontalContentAlignment="Stretch"
                     ItemsSource="{Binding ViewModel.Profiles, Mode=OneWay}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch" Background="Transparent">
                            <StackPanel.ContextMenu>
                                <ContextMenu FontFamily="{StaticResource HarmonyOsSans}">
                                    <MenuItem Icon="{materialDesign:PackIcon RenameOutline}" Header="重命名" Click="MenuItemRenameProfile_OnClick"/>
                                    <MenuItem Icon="{materialDesign:PackIcon ContentCopy}" Header="复制" Click="MenuItemProfileDuplicate_OnClick"/>
                                    <!--<MenuItem Icon="{materialDesign:PackIcon FileExportOutline}" Header="导出"/>-->
                                    <MenuItem Icon="{materialDesign:PackIcon DeleteOutline}" Header="删除" Click="MenuItemDeleteProfile_OnClick"/>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                            <StackPanel.Resources>
                                <converters1:StringToRadioButtonSelectionConverter x:Key="StringToRadioButtonSelectionConverter" />
                            </StackPanel.Resources>
                            <RadioButton GroupName="ProfileSelection" VerticalAlignment="Center">
                                <RadioButton.IsChecked>
                                    <MultiBinding Converter="{StaticResource StringToRadioButtonSelectionConverter}">
                                        <Binding Path="MainViewModel.Settings.SelectedProfile" 
                                                 RelativeSource="{RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}"/>
                                        <Binding Mode="OneWay"/>
                                    </MultiBinding>
                                </RadioButton.IsChecked>
                            </RadioButton>
                            <TextBlock Text="{Binding}" VerticalAlignment="Center" Margin="6 0 0 0"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <materialDesign:Snackbar Grid.Row="0" Grid.RowSpan="2" 
                                     IsActive="{Binding ViewModel.IsRestartSnackbarActive, Mode=OneWay}"
                                     Margin="0 0 0 -16"
                                     ActionButtonPlacement="Inline">
                <materialDesign:SnackbarMessage
                    ActionContent="重启"
                    ActionClick="SnackbarRestartMessage_OnActionClick"
                    Content="切换档案需要重启应用程序。" />
            </materialDesign:Snackbar>
        </Grid>

        <!-- 课表群管理 -->
        <converters1:TempClassPlanGroupTypeToIntConverter x:Key="TempClassPlanGroupTypeToIntConverter" />
        <Grid  Margin="16" Width="300" x:Key="ClassPlanGroups">
            <Grid.Resources>
                <CollectionViewSource x:Key="ClassPlanGroupsSource" 
                                      Source="{Binding MainViewModel.Profile.ClassPlanGroups}"
                                      Filter="ClassPlanGroupsSource_OnFilter"/>
            </Grid.Resources>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0">
                    <TextBlock Text="课表群" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
                    <TextBlock TextWrapping="Wrap" Margin="0 6 0 0">
                        您可以通过课表群对课表进行分组，并灵活地启用一批课表。<ci:NavHyperlink CommandParameter="https://docs.classisland.tech/zh-cn/latest/app/classplan/#%E8%AF%BE%E8%A1%A8%E7%BE%A4">了解更多…</ci:NavHyperlink>
                    </TextBlock>
                    <StackPanel>
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ProfileService.Profile.TempClassPlanGroupId}"
                                                 Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <Separator Margin="0 16 0 4" />
                        <controls1:IconText Kind="Group" Text="临时课表群" Margin="0 0 0 4" />
                        <ContentPresenter>
                            <ContentPresenter.ContentTemplate>
                                <DataTemplate DataType="{x:Type profile:ClassPlanGroup}">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="当前：" VerticalAlignment="Center" />
                                        <TextBlock Text="{Binding Name}" TextTrimming="CharacterEllipsis"
                                                   VerticalAlignment="Center" />
                                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                                VerticalAlignment="Center"
                                                Click="ButtonClearTempClassPlanGroup_OnClick">
                                            <controls1:IconText Kind="Clear" Text="清除" />
                                        </Button>
                                    </StackPanel>
                                </DataTemplate>
                            </ContentPresenter.ContentTemplate>
                            <ContentPresenter.Content>
                                <MultiBinding Converter="{StaticResource ClassPlanGroupIdToClassPlanGroupConverter}">
                                    <Binding Path="ProfileService.Profile.ClassPlanGroups" />
                                    <Binding Path="ProfileService.Profile.TempClassPlanGroupId" />
                                </MultiBinding>
                            </ContentPresenter.Content>
                        </ContentPresenter>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <ToggleButton Grid.Column="0" VerticalAlignment="Center"
                                          IsChecked="{Binding ProfileService.Profile.IsTempClassPlanGroupEnabled}" />
                            <TextBlock Grid.Column="1" Text="已启用" VerticalAlignment="Center"
                                       Margin="2 0 0 0" />
                            <DatePicker Grid.Column="2"
                                        VerticalAlignment="Center"
                                        materialDesign:HintAssist.Hint="失效日期"
                                        SelectedDate="{Binding ProfileService.Profile.TempClassPlanGroupExpireTime}"
                                        Style="{StaticResource MaterialDesignFloatingHintDatePicker}"
                                        Margin="2 0 0 0"
                                        DisplayDateStart="{Binding ProfileService.Profile.TempClassPlanGroupExpireTime}"/>
                            <ComboBox Grid.Column="3" Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                      SelectedIndex="{Binding ProfileService.Profile.TempClassPlanGroupType, Converter={StaticResource TempClassPlanGroupTypeToIntConverter}}"
                                      VerticalAlignment="Center"
                                      materialDesign:HintAssist.Hint="覆盖模式"
                                      Margin="2 0 0 0">
                                <ComboBoxItem>覆盖</ComboBoxItem>
                                <ComboBoxItem>继承</ComboBoxItem>
                            </ComboBox>
                        </Grid>
                    </StackPanel>
                    <Separator Margin="0 16 0 4" />
                    <controls1:IconText Kind="Group" Text="管理课表群" Margin="0 0 0 4"/>
                    
                    <WrapPanel Orientation="Horizontal">
                        <Button Style="{StaticResource MaterialDesignFlatButton}" 
                                HorizontalAlignment="Left"
                                ToolTip="创建一个新的课表群。"
                                Margin="2"
                                Click="ButtonNewClassPlanGroups_OnClick">
                            <controls1:IconText Kind="Add" Text="新建课表群"/>
                        </Button>
                    </WrapPanel>
                </StackPanel>
                <ListBox Grid.Row="1" 
                         ItemsSource="{Binding Source={StaticResource ClassPlanGroupsSource}}"
                         Margin="0 12 0 0"
                         SelectionMode="Single"
                         HorizontalContentAlignment="Stretch"
                         VerticalContentAlignment="Stretch">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <controls:ClassPlanGroupItemControl Item="{Binding Value, Mode=OneWay}" 
                                                                Key="{Binding Key, Mode=OneWay}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </Grid>

        <Style TargetType="ListBox" BasedOn="{StaticResource MaterialDesignNavigationPrimaryListBox}"
               x:Key="NavigationListBox">

        </Style>


        <converters1:SolidColorBrushOpacityConverter x:Key="SolidColorBrushOpacityConverter" />

        <CollectionViewSource x:Key="ClassPlansViewSource" 
                              IsLiveGroupingRequested="True"
                              Source="{Binding MainViewModel.Profile.ClassPlans, Mode=OneWay}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Value.AssociatedGroup"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <converters:SubjectDictionaryKeyFinderMultiConverter x:Key="SubjectDictionaryKeyFinderMultiConverter" />

    </Window.Resources>
    <Grid>

        <materialDesign:DialogHost Identifier="{Binding ViewModel.DialogHostId, Mode=OneWay}">
            <materialDesign:DrawerHost RightDrawerContent="{Binding ViewModel.DrawerContent, Mode=OneWay}"
                                       DrawerClosing="DrawerHost_OnDrawerClosing"
                                       x:Name="MyDrawerHost">
                <!-- Content -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <!-- Main -->
                    <TabControl Grid.Row="1" TabStripPlacement="Left" SelectionChanged="TabControlSelector_OnSelectionChanged"
                                Visibility="{Binding ManagementService.Policy.DisableProfileEditing, Converter={StaticResource InverseBoolToVisConverter}}"
                                x:Name="RootTabControl">
                        <!-- 课表 -->
                        <TabItem Header="课表" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="1*" MinWidth="300" MaxWidth="500"/>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition Width="2*"/>
                                </Grid.ColumnDefinitions>
                                <!-- 课表选择 -->
                                <Grid Grid.Column="0" Margin="0 0 3 0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <!-- 课表操作 -->
                                    <ToolBar Grid.Row="0" ToolBarTray.IsLocked="True" IsEnabled="{Binding ManagementService.Policy.DisableProfileClassPlanEditing, Converter={StaticResource InvertBooleanConverter}}">
                                        <Button Click="ButtonAddClassPlan_OnClick" ToolTip="新建课表。">
                                            <controls1:IconText Kind="Add" Text="添加"/>
                                        </Button>
                                        <Button Click="ButtonDuplicateClassPlan_OnClick" ToolTip="复制选中的课表。"
                                                Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                                    <Setter Property="IsEnabled" Value="{Binding SelectedItem.Value.IsOverlay, Converter={StaticResource BooleanToBooleanReConverter}, ElementName=ListViewClassPlans}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=ListViewClassPlans}" Value="-1">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <controls1:IconText Kind="ContentCopy" Text="复制"/>
                                        </Button>
                                        <Separator/>
                                        <Button Click="ButtonRefreshClassPlans_OnClick" ToolTip="刷新当前视图。">
                                            <controls1:IconText Kind="Refresh" Text="刷新"/>
                                        </Button>
                                        <!--<Button Click="ButtonImportFromFile_OnClick" ToolTip="从表格导入课表。" Visibility="{Binding MainViewModel.Settings.ExpIsExcelImportEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <controls:IconText Kind="Add" Text="从表格导入…"/>
                                        </Button>-->
                                    </ToolBar>

                                    <!-- 课表 -->
                                    <ListView Grid.Row="1" Margin="0 12"
                                             SelectionChanged="ListViewClassPlans_OnSelectionChanged"
                                             SelectionMode="Single"
                                             HorizontalContentAlignment="Stretch"
                                             SelectedValue="{Binding ViewModel.SelectedClassPlan}"
                                             SelectedValuePath="Value"
                                             ItemsSource="{Binding Source={StaticResource ClassPlansViewSource}}"
                                             x:Name="ListViewClassPlans"
                                             Style="{StaticResource MaterialDesignNavigationPrimaryListBox}"
                                             VirtualizingPanel.ScrollUnit="Pixel"
                                             VirtualizingPanel.IsVirtualizing="True"
                                             VirtualizingPanel.IsContainerVirtualizable="True"
                                             VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                                             dd:DragDrop.IsDragSource="True"
                                             dd:DragDrop.IsDropTarget="True">
                                        <ListView.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel IsVirtualizingWhenGrouping="True"
                                                                        IsVirtualizing="True"
                                                                        IsContainerVirtualizable="True"/>
                                            </ItemsPanelTemplate>
                                        </ListView.ItemsPanel>
                                        <ListView.GroupStyle>
                                            <GroupStyle>
                                                <GroupStyle.ContainerStyle>
                                                    <Style TargetType="{x:Type GroupItem}">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="{x:Type GroupItem}">
                                                                    <Expander IsExpanded="True" materialDesign:ExpanderAssist.VerticalHeaderPadding="2"
                                                                              materialDesign:ExpanderAssist.HorizontalHeaderPadding="2">
                                                                        <Expander.DataContext>
                                                                            <MultiBinding Converter="{StaticResource ClassPlanGroupIdToClassPlanGroupConverter}">
                                                                                <Binding Path="ProfileService.Profile.ClassPlanGroups" RelativeSource="{RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}"/>
                                                                                <Binding Path="Name"/>
                                                                            </MultiBinding>
                                                                        </Expander.DataContext>
                                                                        <Expander.Header>
                                                                            <StackPanel Orientation="Horizontal">
                                                                                <TextBlock Text="{Binding Name}" VerticalAlignment="Center" />
                                                                            </StackPanel>
                                                                        </Expander.Header>
                                                                        <ItemsPresenter/>
                                                                    </Expander>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>
                                                </GroupStyle.ContainerStyle>
                                            </GroupStyle>
                                        </ListView.GroupStyle>
                                        <ListView.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="0 -4">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    
                                                    <WrapPanel Orientation="Horizontal"
                                                               Grid.Column="0">
                                                        <materialDesign:PackIcon Kind="FileChartOutline"
                                                            VerticalAlignment="Center"/>
                                                        <TextBlock Text="{Binding Value.Name}"
                                                                   VerticalAlignment="Center"/>
                                                        <!-- 课表启用规则 -->
                                                        <Border MinWidth="20" Height="24" CornerRadius="12"
                                                                Margin="2 0"
                                                                Padding="8 0"
                                                                VerticalAlignment="Center"
                                                                BorderBrush="{DynamicResource PrimaryHueMidBrush}">
                                                            <Border.Style>
                                                                <Style TargetType="Border">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Value.IsActivated}" Value="True">
                                                                            <Setter Property="Background" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                                                            <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignPaper}"/>
                                                                            <Setter Property="BorderThickness" Value="0"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                    <Setter Property="Background" Value="{x:Null}"/>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                                                </Style>
                                                            </Border.Style>
                                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                                <materialDesign:PackIcon VerticalAlignment="Center">
                                                                    <materialDesign:PackIcon.Style>
                                                                        <Style TargetType="materialDesign:PackIcon">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Value.IsEnabled}"
                                                                                    Value="False">
                                                                                    <Setter Property="Kind" Value="LabelOffOutline"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding Value.IsOverlay}"
                                                                                    Value="True">
                                                                                    <Setter Property="Kind" Value="LayersOutline"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                            <Setter Property="Kind" Value="LabelMultipleOutline"/>
                                                                        </Style>
                                                                    </materialDesign:PackIcon.Style>
                                                                </materialDesign:PackIcon>
                                                                <TextBlock Text="{Binding Value.TimeRule.WeekDay, Converter={StaticResource WeekIndexToWeekStringConverter}}"
                                                                           Margin="2 0 0 0">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Value.IsEnabled}"
                                                                                    Value="False">
                                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding Value.IsOverlay}"
                                                                                    Value="True">
                                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                                <TextBlock Margin="4 0 0 0">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Value.TimeRule.WeekCountDiv}"
                                                                                    Value="0">
                                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding Value.IsEnabled}"
                                                                                    Value="False">
                                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                                </DataTrigger>
                                                                                <DataTrigger Binding="{Binding Value.IsOverlay}"
                                                                                    Value="True">
                                                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                    <Run Text="{Binding Value.TimeRule.WeekCountDiv}">
                                                                    </Run><Run Text="/">
                                                                    </Run><Run Text="{Binding Value.TimeRule.WeekCountDivTotal}">
                                                                    </Run><Run Text="周">
                                                                    </Run>
                                                                </TextBlock>
                                                                <TextBlock Text="临时层" Margin="2 0 0 0"
                                                                           FontWeight="Bold" FontStyle="Italic">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Value.IsOverlay}"
                                                                                    Value="True">
                                                                                    <Setter Property="Visibility" Value="Visible"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                            </StackPanel>
                                                        </Border>

                                                        <!-- 时间表 -->
                                                        <Border MinWidth="20" Height="24" CornerRadius="12"
                                                                Margin="2 0"
                                                                Padding="8 0"
                                                                VerticalAlignment="Center">
                                                            <Border.Style>
                                                                <Style TargetType="Border">
                                                                    <Style.Triggers>
                                                                        <DataTrigger Binding="{Binding Value.TimeLayoutId}" Value="">
                                                                            <Setter Property="BorderBrush" Value="IndianRed"/>
                                                                            <Setter Property="TextElement.Foreground" Value="IndianRed"/>
                                                                        </DataTrigger>
                                                                    </Style.Triggers>
                                                                    <Setter Property="Background" Value="{x:Null}"/>
                                                                    <Setter Property="BorderThickness" Value="1"/>
                                                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                                                                    <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                                                                </Style>
                                                            </Border.Style>
                                                            <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                                                                <materialDesign:PackIcon VerticalAlignment="Center" Kind="Timetable"/>
                                                                <TextBlock VerticalAlignment="Center"
                                                                           Margin="4 0 0 0">
                                                                    <TextBlock.Style>
                                                                        <Style TargetType="TextBlock">
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Value.TimeLayoutId}" Value="">
                                                                                    <Setter Property="Text" Value="???"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                            <Setter Property="Text" Value="{Binding Value.TimeLayout.Name}"/>
                                                                        </Style>
                                                                    </TextBlock.Style>
                                                                </TextBlock>
                                                            </StackPanel>
                                                        </Border>
                                                    </WrapPanel>
                                                    
                                                    <!-- 启用状态显示 -->
                                                    <WrapPanel Orientation="Horizontal"
                                                               Grid.Column="1"
                                                               VerticalAlignment="Center">
                                                        
                                                    </WrapPanel>
                                                </Grid>
                                            </DataTemplate>
                                        </ListView.ItemTemplate>
                                    </ListView>
                                </Grid>
                                
                                <!-- Splitter -->
                                <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch"
                                              VerticalAlignment="Stretch"/>

                                <!-- 课表编辑 -->
                                <Grid Grid.Column="2" IsEnabled="{Binding ManagementService.Policy.DisableProfileClassPlanEditing, Converter={StaticResource InvertBooleanConverter}}">
                                    <Grid Margin="3 0 0 0"
                                          DataContext="{Binding SelectedItem.Value, ElementName=ListViewClassPlans}">
                                        <Grid.Style>
                                            <Style TargetType="Grid">
                                                <Style.Triggers>
                                                    <DataTrigger
                                                        Binding="{Binding SelectedItem, ElementName=ListViewClassPlans}"
                                                        Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </Style>
                                        </Grid.Style>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <!-- 课表编辑操作 -->
                                        <ToolBar Grid.Row="0" ToolBarTray.IsLocked="True">
                                            <!--<Button Click="ButtonDebugAddNewClass_OnClick">
                                            <controls:IconText Kind="Add" Text="DebugAddNew"/>
                                        </Button>-->
                                            <Button Click="ButtonClassPlanInfoEdit_OnClick" ToolTip="查看并编辑课表的基本信息。"
                                                    Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}">
                                                <controls1:IconText Kind="InfoOutline" Text="课表信息" />
                                            </Button>
                                            <Button Click="ButtonClassPlanDetails_OnClick" 
                                                    ToolTip="查看课表的所有时间点的附加设置继承情况。">
                                                <controls1:IconText Kind="Text" Text="详细看板…" />
                                            </Button>
                                            <Separator />
                                            <Button ToolTip="创建临时课表层。"
                                                    Click="ButtonBeginCreateTempOverlayClassPlan_OnClick"
                                                    IsEnabled="{Binding IsOverlay, Converter={StaticResource BooleanToBooleanReConverter}}">
                                                <controls1:IconText Kind="LayersOutline" Text="创建临时层" />
                                            </Button>
                                            <materialDesign:PopupEx x:Name="PopupCreateTempOverlayClassPlan"
                                                                    StaysOpen="False"
                                                                    AllowsTransparency="True"
                                                                    PopupAnimation="Fade">
                                                <Border Background="{DynamicResource MaterialDesignPaper}" Width="320"
                                                        Margin="8">
                                                    <Border.Effect>
                                                        <DropShadowEffect BlurRadius="8"
                                                                          Opacity="0.5"
                                                                          Direction="0"
                                                                          ShadowDepth="0"/>
                                                    </Border.Effect>
                                                    <StackPanel Margin="12">
                                                        <TextBlock Text="创建临时层" Style="{StaticResource MaterialDesignHeadline5TextBlock}"/>
                                                        <ComboBox Style="{StaticResource MaterialDesignOutlinedComboBox}" 
                                                                  materialDesign:HintAssist.Hint="时间表"
                                                                  ItemsSource="{Binding ProfileService.Profile.TimeLayouts, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}"
                                                                  SelectedValuePath="Key"
                                                                  SelectedValue="{Binding ViewModel.TempOverlayClassPlanTimeLayoutId, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}"
                                                                  Margin="0 12 0 0">
                                                            <ComboBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <TextBlock Text="{Binding Value.Name}"/>
                                                                </DataTemplate>
                                                            </ComboBox.ItemTemplate>
                                                        </ComboBox>
                                                        <Button HorizontalAlignment="Right" Margin="0 12 0 0"
                                                                Click="ButtonCreateTempOverlayClassPlan_OnClick">
                                                            <controls1:IconText Kind="Check" Text="创建"/>
                                                        </Button>
                                                    </StackPanel>
                                                </Border>
                                            </materialDesign:PopupEx>
                                            <Separator />
                                            <Button Click="ButtonDeleteClassPlan_OnClick" ToolTip="删除该课表。">
                                                <controls1:IconText Kind="Delete" Text="删除课表" />
                                            </Button>
                                        </ToolBar>

                                        <!-- 课表编辑 -->
                                        <Grid Grid.Row="1">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="5"/>
                                                <ColumnDefinition Width="350" MinWidth="300" MaxWidth="450"/>
                                            </Grid.ColumnDefinitions>
                                            <DataGrid Grid.Column="0"
                                                      Margin="0 0 4 0"
                                                      AutoGenerateColumns="False"
                                                      ItemsSource="{Binding Classes}"
                                                      CanUserAddRows="False"
                                                      CanUserSortColumns="False"
                                                      RowHeaderWidth="150"
                                                      VirtualizingPanel.IsVirtualizing="True"
                                                      VirtualizingPanel.ScrollUnit="Pixel"
                                                      x:Name="DataGridClassPlans"
                                                      UnloadingRow="DataGridClassPlans_OnUnloadingRow"
                                                      BeginningEdit="DataGridClassPlans_OnBeginningEdit"
                                                      CellEditEnding="DataGridClassPlans_OnCellEditEnding"
                                                      SelectedIndex="{Binding ViewModel.SelectedClassIndex, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}, Mode=TwoWay}"
                                                      SelectedItem="{Binding ViewModel.SelectedClassInfo, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}">
                                                <DataGrid.Columns>
                                                    <DataGridTemplateColumn Header="时间" IsReadOnly="True">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <TextBlock>
                                                                    <Run
                                                                        Text="{Binding CurrentTimeLayoutItem.StartSecond, StringFormat={}{0:HH:mm:ss}}" />
                                                                    <Run Text="-" />
                                                                    <Run
                                                                        Text="{Binding CurrentTimeLayoutItem.EndSecond, StringFormat={}{0:HH:mm:ss}}" />
                                                                </TextBlock>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <materialDesign:DataGridComboBoxColumn Header="科目"
                                                        ItemsSourceBinding="{Binding MainViewModel.Profile.Subjects.Keys, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ProfileSettingsWindow}}, UpdateSourceTrigger=PropertyChanged}"
                                                        SelectedValueBinding="{Binding SubjectId}"
                                                        ElementStyle="{StaticResource ClassPlanDataGridComboBoxStyle}"
                                                        EditingElementStyle="{StaticResource ClassPlanDataGridComboBoxStyle}" />
                                                </DataGrid.Columns>
                                            </DataGrid>

                                            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch"
                                                          VerticalAlignment="Stretch"/>

                                            <TabControl Grid.Column="2"
                                                        HorizontalContentAlignment="Left">
                                                <TabControl.Style>
                                                    <Style TargetType="TabControl" BasedOn="{StaticResource MaterialDesignTabControl}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ViewModel.SelectedClassInfo, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}" Value="{x:Null}">
                                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        
                                                    </Style>
                                                </TabControl.Style>
                                                <TabItem Header="编辑科目">
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition/>
                                                            <RowDefinition Height="Auto"/>
                                                        </Grid.RowDefinitions>
                                                        <ListBox
                                                            Grid.Row="0"
                                                            SelectedValuePath="Key"
                                                            SelectedValue="{Binding ViewModel.SelectedClassInfo.SubjectId, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}, FallbackValue=''}"
                                                            ItemsSource="{Binding ProfileService.Profile.Subjects, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}"
                                                            Style="{StaticResource MaterialDesignNavigationPrimaryListBox}">
                                                            <ListBox.ItemContainerStyle>
                                                                <Style
                                                                    BasedOn="{StaticResource MaterialDesignNavigationPrimaryListBoxItem}"
                                                                    TargetType="ListBoxItem">
                                                                    <Setter Property="Margin" Value="1" />
                                                                    <Setter Property="Padding" Value="0" />
                                                                    
                                                                </Style>
                                                            </ListBox.ItemContainerStyle>
                                                            <ListBox.ItemsPanel>
                                                                <ItemsPanelTemplate>
                                                                    <controls2:VirtualizingWrapPanel />
                                                                </ItemsPanelTemplate>
                                                            </ListBox.ItemsPanel>
                                                            <ListBox.ItemTemplate>
                                                                <DataTemplate>
                                                                    <Border Padding="9" Background="Transparent" MouseUp="EventSetterSubjectSelector_OnClick"> 
                                                                        <TextBlock Text="{Binding Value.Initial}"
                                                                                   FontSize="18"
                                                                                   Background="Transparent"
                                                                                   />
                                                                    </Border>
                                                                </DataTemplate>
                                                            </ListBox.ItemTemplate>
                                                        </ListBox>
                                                        <StackPanel Grid.Row="1" >
                                                            <materialDesign:ColorZone Background="#20A0D9B4" Visibility="{Binding ViewModel.IsClassPlanEditComplete, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}">
                                                                <DockPanel Margin="8 0 4 0">
                                                                    <Button Style="{StaticResource MaterialDesignToolForegroundButton}"
                                                                            Content="{materialDesign:PackIcon Close}"
                                                                            VerticalAlignment="Center"
                                                                            DockPanel.Dock="Right"
                                                                            ToolTip="关闭"
                                                                            Click="ButtonCloseCompleteTip_OnClick"/>
                                                                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                                                                            DockPanel.Dock="Right"
                                                                            Click="ButtonAddClassPlanFromCompletedTip_OnClick"
                                                                            materialDesign:RippleAssist.Feedback="{DynamicResource MaterialDesignBody}"
                                                                            Foreground="{DynamicResource MaterialDesignBody}">
                                                                        <controls1:IconText Kind="Add" Text="添加课表"/>
                                                                    </Button>
                                                                    <controls1:IconText Kind="DoneOutline" Text="此课表已完成录入。"
                                                                        VerticalAlignment="Center"/>
                                                                </DockPanel>
                                                            </materialDesign:ColorZone>
                                                            <CheckBox Margin="8"
                                                                      IsChecked="{Binding MainViewModel.Settings.IsProfileEditorClassInfoSubjectAutoMoveNextEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}"  Content="选完科目自动移动到下一个课程"/>
                                                        </StackPanel>
                                                    </Grid>
                                                </TabItem>
                                                <TabItem Header="附加设置结果">

                                                </TabItem>
                                            </TabControl>

                                            <StackPanel Grid.Column="2" 
                                                        VerticalAlignment="Center" HorizontalAlignment="Center">
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding ViewModel.SelectedClassInfo, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}" Value="{x:Null}">
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </Style>
                                                </StackPanel.Style>
                                                <materialDesign:PackIcon Kind="FileChartOutline" Width="72" Height="72"
                                                                         HorizontalAlignment="Center"/>
                                                <TextBlock Text="在左侧课表中选择一节课程，然后在此处进行设置。" TextWrapping="Wrap"
                                                           Margin="0 8 0 0"/>
                                            </StackPanel>
                                        </Grid>
                                        <!-- 关闭前警告 -->
                                        <materialDesign:ColorZone Grid.Row="2" Background="Yellow"
                                                                  HorizontalAlignment="Stretch"
                                                                  Visibility="{Binding ViewModel.IsClassPlansEditing, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:ProfileSettingsWindow}, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}"
                                                                  Mode="Light">
                                            <controls1:IconText Kind="Warning" Text="正在编辑课表。若要关闭窗口，请先完成课表编辑。" Margin="6" />
                                        </materialDesign:ColorZone>
                                    </Grid>
                                </Grid>
                                <StackPanel Grid.Column="2" 
                                            VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedItem.Value, ElementName=ListViewClassPlans}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Style>
                                    </StackPanel.Style>
                                    <materialDesign:PackIcon Kind="FileChartOutline" Width="72" Height="72"
                                                             HorizontalAlignment="Center"/>
                                    <TextBlock Text="在左侧选择一个课表，然后在此处进行设置。" TextWrapping="Wrap"
                                               Margin="0 8 0 0"/>
                                </StackPanel>
                            </Grid>
                        </TabItem>

                        <!-- 时间表 -->
                        <TabItem Header="时间表" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="250" MinWidth="250" MaxWidth="400"/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <!-- 时间表选择 -->
                                <Grid Grid.Column="0" Margin="0 0 3 0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <!-- 时间表操作 -->
                                    <ToolBar Grid.Row="0" ToolBarTray.IsLocked="True" IsEnabled="{Binding ManagementService.Policy.DisableProfileTimeLayoutEditing, Converter={StaticResource InvertBooleanConverter}}">
                                        <Button Click="ButtonAddTimeLayout_OnClick" ToolTip="新建时间表。"
                                                Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}">
                                            <controls1:IconText Kind="Add" Text="添加"/>
                                        </Button>
                                        <Button Click="ButtonDuplicateTimeLayout_OnClick" ToolTip="复制选中的时间表。"
                                                Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=ListViewTimeLayouts}" Value="-1">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <controls1:IconText Kind="ContentCopy" Text="复制"/>
                                        </Button>
                                    </ToolBar>

                                    <!-- 时间表 -->
                                    <ListBox Grid.Row="1" Margin="0 12"
                                             SelectionMode="Single"
                                             Style="{StaticResource NavigationListBox}"
                                             HorizontalContentAlignment="Stretch"
                                             SelectionChanged="ListViewTimeLayouts_OnSelectionChanged"
                                             ItemsSource="{Binding ProfileService.Profile.TimeLayouts, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                             x:Name="ListViewTimeLayouts"
                                             VirtualizingPanel.IsVirtualizing="True"
                                             VirtualizingPanel.ScrollUnit="Pixel">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid HorizontalAlignment="Stretch">
                                                    <TextBlock Text="{Binding Value.Name}" HorizontalAlignment="Left"/>
                                                    <materialDesign:PackIcon Kind="Lock" HorizontalAlignment="Right"
                                                                             ToolTip="已锁定活动的时间表。"
                                                                             Visibility="{Binding Value.IsActivated, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>

                                    <!-- 时间点时长 -->
                                    <materialDesign:Card HorizontalAlignment="Stretch"
                                                         VerticalAlignment="Center"
                                                         Foreground="{DynamicResource MaterialDesignBody}"
                                                         Padding="12 10 12 10"
                                                         Grid.Row="3" Margin="8 8 6 8"
                                                         IsEnabled="{Binding ManagementService.Policy.DisableProfileTimeLayoutEditing, Converter={StaticResource InvertBooleanConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}">
                                        <StackPanel>
                                            <controls1:NumbericTextBox
                                                MaxValue="36000" MinValue="0" HorizontalAlignment="Stretch"
                                                materialDesign:TextFieldAssist.SuffixText="分钟"
                                                Foreground="{DynamicResource MaterialDesignBody}"
                                                Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                                materialDesign:HintAssist.Hint="默认上课时间点时长"
                                                Text="{Binding MainViewModel.Settings.DefaultOnClassTimePointMinutes, Mode=TwoWay, Converter={StaticResource IntToStringConverter}, UpdateSourceTrigger=PropertyChanged}" />
                                            <controls1:NumbericTextBox
                                                MaxValue="36000" MinValue="0" HorizontalAlignment="Stretch"
                                                materialDesign:TextFieldAssist.SuffixText="分钟"
                                                Foreground="{DynamicResource MaterialDesignBody}"
                                                Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                                materialDesign:HintAssist.Hint="默认课间时间点时长"
                                                Text="{Binding MainViewModel.Settings.DefaultBreakingTimePointMinutes, Mode=TwoWay, Converter={StaticResource IntToStringConverter}, UpdateSourceTrigger=PropertyChanged}" />
                                        </StackPanel>
                                    </materialDesign:Card>
                                </Grid>

                                <GridSplitter HorizontalAlignment="Stretch" Grid.Column="1"/>

                                <!-- 时间节点编辑 -->
                                <Grid Grid.Column="2" Margin="3 0 0 0" 
                                      DataContext="{Binding SelectedItem.Value, ElementName=ListViewTimeLayouts}">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedItem, ElementName=ListViewTimeLayouts}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </Style>
                                    </Grid.Style>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="5"/>
                                        <ColumnDefinition Width="350" MinWidth="250" MaxWidth="350"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <!-- 时间表编辑操作 -->
                                    <ToolBar Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="3" ToolBarTray.IsLocked="True" 
                                             IsEnabled="{Binding ManagementService.Policy.DisableProfileTimeLayoutEditing, Converter={StaticResource InvertBooleanConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}">
                                        <!--<TextBlock Text="{Binding Layouts}"/>-->
                                        <Button Click="ButtonAddClassTime_OnClick" ToolTip="添加上课时间点。" IsEnabled="{Binding IsActivated, Converter={StaticResource BooleanToBooleanReConverter}}">
                                            <controls1:IconText Kind="NotePlusOutline" Text="上课"/>
                                        </Button>
                                        <Button Click="ButtonAddBreakTime_OnClick" ToolTip="添加课间休息时间点。" IsEnabled="{Binding IsActivated, Converter={StaticResource BooleanToBooleanReConverter}}">
                                            <controls1:IconText Kind="ClockPlusOutline" Text="课间"/>
                                        </Button>
                                        <Button Click="ButtonAddSeparator_OnClick" ToolTip="添加分割线。" IsEnabled="{Binding IsActivated, Converter={StaticResource BooleanToBooleanReConverter}}">
                                            <controls1:IconText Kind="ArrowSplitHorizontal" Text="分割线"/>
                                        </Button>
                                        <Separator/>
                                        <Button Click="ButtonRemoveTimePoint_OnClick" ToolTip="删除选中的时间点。">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=ListViewTimePoints}" Value="-1">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                    <Setter Property="IsEnabled" Value="{Binding IsActivated, Converter={StaticResource BooleanToBooleanReConverter}}"/>
                                                </Style>
                                            </Button.Style>
                                            <controls1:IconText Kind="Remove" Text="删除"/>
                                        </Button>
                                        <!--<Button  Click="ButtonEditTimePoint_OnClick"
                                                 ToolTip="编辑选中的时间点。">
                                            <Button.Style>
                                                <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding SelectedIndex, ElementName=ListViewTimePoints}" Value="-1">
                                                            <Setter Property="IsEnabled" Value="False"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>
                                            <controls:IconText Kind="EditOutline" Text="编辑"/>
                                        </Button>-->
                                        <Separator />
                                        <!--<StackPanel Orientation="Horizontal" Margin="6 0">
                                            <controls:IconText Kind="ResizeVertical" Text="编辑模式" />
                                            <ToggleButton
                                                IsChecked="{Binding ViewModel.IsPanningModeEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}" />
                                            <controls:IconText Kind="GestureTouch" Text="移动模式" />
                                        </StackPanel>
                                        <Separator/>-->
                                        <Button Click="ButtonEditTimeLayoutInfo_OnClick"
                                                ToolTip="查看并编辑时间表的基本信息。">
                                            <controls1:IconText Kind="InfoOutline" Text="时间表信息"/>
                                        </Button>
                                        <Button Click="ButtonDeleteTimeLayout_OnClick"
                                                ToolTip="删除该时间表。"
                                                IsEnabled="{Binding IsActivated, Converter={StaticResource BooleanToBooleanReConverter}}">
                                            <controls1:IconText Kind="Delete" Text="删除时间表"/>
                                        </Button>
                                    </ToolBar>

                                    <!-- 时间点 -->
                                    <TabControl Grid.Column="0" Grid.Row="2"
                                                TabStripPlacement="Bottom"
                                                HorizontalContentAlignment="Left"
                                                x:Name="TabTimeLayoutEditors">
                                        <!-- 旧版编辑器 -->
                                        <TabItem Header="{materialDesign:PackIcon ListBoxOutline}" 
                                                 Visibility="Collapsed"
                                                 ToolTip="列表" Padding="4">
                                            <ListBox SelectionMode="Single"
                                                     VirtualizingPanel.IsVirtualizing="True"
                                                     VirtualizingPanel.ScrollUnit="Pixel"
                                                     SelectedItem="{Binding ViewModel.SelectedTimePoint, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}, Mode=TwoWay}"
                                                     ItemsSource="{Binding Layouts, Mode=OneWay}"
                                                     x:Name="ListViewTimePoints"
                                                     Style="{StaticResource MaterialDesignNavigationPrimaryListBox}">
                                                <ListBox.ItemContainerStyle>
                                                    <Style TargetType="ListBoxItem"
                                                           BasedOn="{StaticResource MaterialDesignNavigationPrimaryListBoxItem}">
                                                        
                                                    </Style>
                                                </ListBox.ItemContainerStyle>
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition Height="Auto" />
                                                                <RowDefinition Height="Auto" />
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="Auto" />
                                                                <ColumnDefinition />
                                                            </Grid.ColumnDefinitions>
                                                            <!-- Icon -->
                                                            <materialDesign:PackIcon Grid.Column="0" Grid.Row="0"
                                                                Margin="0 0 6 0">
                                                                <materialDesign:PackIcon.Style>
                                                                    <Style TargetType="materialDesign:PackIcon">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding TimeType}"
                                                                                Value="0">
                                                                                <Setter Property="Kind" Value="BookOutline" />
                                                                                <Setter Property="ToolTip" Value="上课时间" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding TimeType}"
                                                                                Value="1">
                                                                                <Setter Property="Kind"
                                                                                    Value="ClockOutline" />
                                                                                <Setter Property="ToolTip" Value="课间休息" />
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding TimeType}"
                                                                                Value="2">
                                                                                <Setter Property="Kind"
                                                                                    Value="ArrowSplitHorizontal" />
                                                                                <Setter Property="ToolTip" Value="分割线" />
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                    </Style>
                                                                </materialDesign:PackIcon.Style>
                                                            </materialDesign:PackIcon>

                                                            <!-- Time -->
                                                            <TextBlock Grid.Column="1" Grid.Row="0" FontSize="14"
                                                                       ToolTip="时间段">
                                                                <Run
                                                                    Text="{Binding StartSecond, ConverterCulture=zh-cn, StringFormat={}{0:HH:mm:ss}}" />
                                                                <Run Text="-" />
                                                                <Run
                                                                    Text="{Binding EndSecond, ConverterCulture=zh-cn, StringFormat={}{0:HH:mm:ss}}" />
                                                            </TextBlock>

                                                            <!-- Last Time -->
                                                            <controls1:IconText Grid.Column="1" Grid.Row="1"
                                                                               Kind="ClockAutoOutline"
                                                                               Text="{Binding Last}"
                                                                               Margin="0 3 0 0" ToolTip="持续时间" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </TabItem>
                                        <!-- 新编辑器 -->
                                        <TabItem Header="{materialDesign:PackIcon TimelineOutline}"
                                                 Visibility="Collapsed">
                                            <controls:TimeLineListControl SelectedItem="{Binding ViewModel.SelectedTimePoint, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}, Mode=TwoWay}"
                                                                          ItemsSource="{Binding Layouts, Mode=OneWay}"
                                                                          Scale="{Binding ViewModel.TimeLineScale, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}, Mode=OneWay}"
                                                                          x:Name="TimeLineListControl"
                                                                          IsPanningModeEnabled="True">
                                                <!-- 回应我吧，爱莉希雅 -->
                                                <controls:TimeLineListControl.IsReadOnly>
                                                    <MultiBinding Converter="{StaticResource BooleanOrExpressionMultiConverter}" Mode="OneWay">
                                                        <Binding Path="IsActivated" Mode="OneWay"/>
                                                        <Binding Path="ManagementService.Policy.DisableProfileTimeLayoutEditing" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType=local:ProfileSettingsWindow}" Mode="OneWay"/>
                                                    </MultiBinding>
                                                </controls:TimeLineListControl.IsReadOnly>
                                            </controls:TimeLineListControl>
                                        </TabItem>
                                    </TabControl>

                                    <!-- 新编辑器大小调整控件 -->
                                    <StackPanel Grid.Row="3" Grid.Column="0" Orientation="Horizontal"
                                                VerticalAlignment="Bottom"
                                                HorizontalAlignment="Right">
                                        <StackPanel.Style>
                                            <Style TargetType="StackPanel">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=TabTimeLayoutEditors}"
                                                                 Value="1">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </Style>
                                        </StackPanel.Style>
                                        <Button Content="{materialDesign:PackIcon Target}"
                                                ToolTip="定位选中项目"
                                                VerticalAlignment="Center"
                                                Margin="2 0"
                                                ToolTipService.Placement="Top"
                                                Style="{StaticResource MaterialDesignToolForegroundButton}"
                                                Click="ButtonTimeLayoutEditScrollToContent_OnClick"/>
                                        <TextBlock Text="{Binding ViewModel.TimeLineScale, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}, Mode=OneWay, StringFormat={}{0:P0}}" 
                                                   Margin="4 0 4 0"
                                                   ToolTip="缩放比例"
                                                   ToolTipService.Placement="Top"
                                                   VerticalAlignment="Center"/>
                                        <RepeatButton Content="{materialDesign:PackIcon ZoomOut}"
                                                      ToolTip="缩小"
                                                      Delay="500" Interval="100"
                                                      ToolTipService.Placement="Top"
                                                      VerticalAlignment="Center"
                                                      Margin="2 0"
                                                      Style="{StaticResource MaterialDesignToolForegroundButton}"
                                                      Click="ButtonZoomOut_OnClick"/>
                                        <RepeatButton Content="{materialDesign:PackIcon ZoomIn}"
                                                      ToolTip="放大"
                                                      Delay="500" Interval="100"
                                                      ToolTipService.Placement="Top"
                                                      VerticalAlignment="Center"
                                                      Margin="2 0"
                                                      Style="{StaticResource MaterialDesignToolForegroundButton}"
                                                      Click="ButtonZoomIn_OnClick"/>
                                    </StackPanel>

                                    <Button Grid.Row="3" 
                                            Grid.Column="0"
                                            VerticalAlignment="Bottom"
                                            HorizontalAlignment="Right"
                                            Content="{materialDesign:PackIcon Target}"
                                            ToolTip="定位选中项目"
                                            Margin="2 0"
                                            Click="ButtonTimeLayoutEditScrollToContent_OnClick">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignToolForegroundButton}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding SelectedIndex, ElementName=TabTimeLayoutEditors}"
                                                                 Value="0">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <ListBox Grid.Row="3"
                                             Grid.Column="0"
                                             x:Name="ListBoxTimeLayoutEditorModeSelector"
                                             Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                             VerticalContentAlignment="Stretch"
                                             VerticalAlignment="Bottom"
                                             HorizontalAlignment="Left"
                                             SelectionChanged="Selector_OnSelectionChanged"
                                             SelectedIndex="{Binding SelectedIndex, ElementName=TabTimeLayoutEditors}"
                                             materialDesign:ListBoxItemAssist.ShowSelection="False">
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                                                <Setter Property="Padding" Value="0"/>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate DataType="{x:Type materialDesign:PackIcon}">
                                                <DataTemplate.Resources>
                                                    <Style TargetType="RadioButton" BasedOn="{StaticResource MaterialDesignTabRadioButtonTop}">
                                                        <Setter Property="ToolTipService.Placement" Value="Top"/>
                                                    </Style>
                                                    <converters1:StringToRadioButtonSelectionConverter x:Key="StringToRadioButtonSelectionConverter" />
                                                </DataTemplate.Resources>
                                                <RadioButton ToolTip="{Binding ToolTip}"
                                                             IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}">
                                                    <materialDesign:PackIcon Kind="{Binding Kind}"/>
                                                </RadioButton>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <materialDesign:PackIcon Kind="ListBoxOutline" ToolTip="列表视图"/>
                                        <materialDesign:PackIcon Kind="TimelineOutline" ToolTip="时间线视图"/>
                                    </ListBox>

                                    <!-- 编辑警告 -->
                                    <materialDesign:ColorZone Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                                                              Mode="PrimaryLight"
                                                              Background="LightYellow"
                                                              Visibility="{Binding IsActivated, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <controls1:IconText Kind="Warning" Text="当前时间表处于活动状态，部分设置无法编辑。"
                                                           Margin="4"/>
                                    </materialDesign:ColorZone>

                                    <GridSplitter Grid.Row="2" Grid.Column="1" HorizontalAlignment="Stretch" Grid.RowSpan="2"/>

                                    <!-- 时间点编辑 -->
                                    <ScrollViewer Grid.Row="2" Grid.Column="2" Grid.RowSpan="2" VerticalScrollBarVisibility="Auto">
                                        <StackPanel Margin="16" 
                                                    IsEnabled="{Binding ManagementService.Policy.DisableProfileTimeLayoutEditing, Converter={StaticResource InvertBooleanConverter}}"
                                                    DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}">
                                            <StackPanel IsEnabled="{Binding SelectedItem.Value.IsActivated, ElementName=ListViewTimeLayouts, Converter={StaticResource InvertBooleanConverter}}">
                                                <TextBlock Text="编辑时间点"
                                                           Style="{StaticResource MaterialDesignHeadline5TextBlock}" />
                                                <!--<TextBlock Text="{Binding}"/>-->
                                                <materialDesign:TimePicker materialDesign:HintAssist.Hint="开始时间"
                                                                           Margin="0 12 0 0"
                                                                           WithSeconds="True" Is24Hours="True"
                                                                           Style="{StaticResource MaterialDesignOutlinedTimePicker}"
                                                                           SelectedTime="{Binding ViewModel.SelectedTimePoint.StartSecond}" />
                                                <materialDesign:TimePicker materialDesign:HintAssist.Hint="结束时间"
                                                                           Margin="0 12 0 0"
                                                                           WithSeconds="True" Is24Hours="True"
                                                                           SelectedTime="{Binding ViewModel.SelectedTimePoint.EndSecond}">
                                                    <materialDesign:TimePicker.Style>
                                                        <Style TargetType="materialDesign:TimePicker"
                                                               BasedOn="{StaticResource MaterialDesignOutlinedTimePicker}">
                                                            <Style.Triggers>
                                                                <DataTrigger
                                                                    Binding="{Binding ViewModel.SelectedTimePoint.TimeType}"
                                                                    Value="2">
                                                                    <Setter Property="Visibility" Value="Collapsed" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                            <Setter Property="Visibility" Value="Visible" />
                                                        </Style>
                                                    </materialDesign:TimePicker.Style>
                                                </materialDesign:TimePicker>
                                                <TextBlock Text="类型" Margin="0 16 0 0" />
                                                <ListBox
                                                    Style="{StaticResource MaterialDesignChoiceChipPrimaryOutlineListBox}"
                                                    SelectedIndex="{Binding ViewModel.SelectedTimePoint.TimeType}"
                                                    PreviewMouseWheel="UIElement_OnPreviewMouseWheel">
                                                    <ListBoxItem>
                                                        <controls1:IconText Kind="BookOutline" Text="上课" />
                                                    </ListBoxItem>
                                                    <ListBoxItem>
                                                        <controls1:IconText Kind="ClockOutline" Text="课间休息" />
                                                    </ListBoxItem>
                                                    <ListBoxItem>
                                                        <controls1:IconText Kind="ArrowSplitHorizontal" Text="分割线" />
                                                    </ListBoxItem>
                                                </ListBox>
                                            </StackPanel>
                                            <StackPanel>
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding ViewModel.SelectedTimePoint.TimeType}"
                                                                Value="0">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </Style>
                                                </StackPanel.Style>
                                                <CheckBox Margin="0 8 0 0" Content="默认隐藏"
                                                          IsChecked="{Binding ViewModel.SelectedTimePoint.IsHideDefault}" />
                                                <TextBlock Text="若默认隐藏一个时间点，那么只有在处于此时间点时，此时间点才会显示。" TextWrapping="Wrap" />

                                                <Separator Margin="0 20 0 8" />
                                                <controls1:IconText Kind="BookOutline" Text="默认课程" Margin="0 0 0 4" />
                                                <ComboBox materialDesign:HintAssist.Hint="默认课程"
                                                          Style="{StaticResource MaterialDesignFloatingHintComboBox}"
                                                          ItemsSource="{Binding ProfileService.Profile.Subjects, UpdateSourceTrigger=PropertyChanged}"
                                                          SelectedValuePath="Key"
                                                          SelectedValue="{Binding ViewModel.SelectedTimePoint.DefaultClassId}">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <TextBlock Text="{Binding Value.Name}" />
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                                <WrapPanel Orientation="Horizontal" Margin="0 4 0 0">
                                                    <Button Style="{StaticResource MaterialDesignFlatButton}"
                                                            Click="ButtonOverwriteClasses_OnClick">
                                                        <controls1:IconText Kind="Upload" Text="覆盖现有课程"/>
                                                    </Button>
                                                </WrapPanel>
                                            </StackPanel>
                                            <StackPanel>
                                                <StackPanel.Style>
                                                    <Style TargetType="StackPanel">
                                                        <Style.Triggers>
                                                            <DataTrigger
                                                                Binding="{Binding ViewModel.SelectedTimePoint.TimeType}"
                                                                Value="1">
                                                                <Setter Property="Visibility" Value="Visible" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                        <Setter Property="Visibility" Value="Collapsed" />
                                                    </Style>
                                                </StackPanel.Style>
                                                <TextBox Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                                    Margin="0 12 0 0"
                                                    Text="{Binding ViewModel.SelectedTimePoint.BreakName}"
                                                    materialDesign:HintAssist.Hint="课间名称" />
                                            </StackPanel>
                                            <Separator Margin="0 20 0 8" />
                                            <controls1:IconText Kind="CogOutline" Text="更多选项" Margin="0 0 0 8" />
                                            <ItemsControl
                                                ItemsSource="{x:Static services:IAttachedSettingsHostService.TimePointSettingsAttachedSettingsControls}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <controls1:AttachedSettingsControlPresenter ControlInfo="{Binding}"
                                                            Margin="0 0 0 8"
                                                            ContentId="{Binding SelectedItem.Key, ElementName=ListViewTimeLayouts, Mode=OneWay}"
                                                            ContentIndex="{Binding SelectedIndex, ElementName=TimeLineListControl, Mode=OneWay}"
                                                            TargetObject="{Binding ViewModel.SelectedTimePoint, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}" />

                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>

                                        </StackPanel>
                                    </ScrollViewer>
                                    <Grid Grid.Row="2" Grid.Column="2" Grid.RowSpan="2" 
                                          Background="{DynamicResource MaterialDesignPaper}">
                                        <Grid.Style>
                                            <Style TargetType="Grid">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ViewModel.SelectedTimePoint ,RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}"
                                                                 Value="{x:Null}">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </Style>
                                        </Grid.Style>
                                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" Margin="16">
                                            <Image Source="/Assets/HoYoStickers/藿藿_好痛.png" Width="78" Stretch="UniformToFill" Margin="0 0 0 8"
                                                   ToolTip="霍霍_好痛"/>
                                            <TextBlock Text="您还没有创建时间点。点击上方工具栏新建时间点按钮以新建时间点。"
                                                       TextAlignment="Center"
                                                       VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap"/>
                                        </StackPanel>
                                    </Grid>

                                    <!-- 禁止编辑叠层 -->
                                    <!--<Grid Grid.Row="0" Grid.RowSpan="4"
                                          Grid.Column="0" Grid.ColumnSpan="3"
                                          Visibility="{Binding IsActivated, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Border Background="{DynamicResource MaterialDesignPaper}" Opacity="0.8"/>
                                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                                            <Image Source="/Assets/HoYoStickers/帕姆_震惊.png" Width="78"  Margin="0 0 0 8"
                                                   ToolTip="帕姆_震惊"/>
                                            <TextBlock Text="无法编辑处于活动状态的时间表。"
                                                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </StackPanel>
                                    </Grid>-->
                                </Grid>
                                <StackPanel Grid.Column="2" 
                                            VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SelectedItem.Value, ElementName=ListViewTimeLayouts}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Style>
                                    </StackPanel.Style>
                                    <materialDesign:PackIcon Kind="Timetable" Width="72" Height="72"
                                                             HorizontalAlignment="Center"/>
                                    <TextBlock Text="在左侧选择一个时间表，然后在此处进行设置。" TextWrapping="Wrap"
                                               Margin="0 8 0 0"/>
                                </StackPanel>
                            </Grid>
                        </TabItem>

                        <!-- 科目 -->
                        <TabItem Header="科目" Visibility="Collapsed">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="5"/>
                                    <ColumnDefinition Width="450" MaxWidth="500" MinWidth="200"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <!-- 科目操作 -->
                                <ToolBar Grid.Column="0" Grid.ColumnSpan="3"
                                         IsEnabled="{Binding ManagementService.Policy.DisableProfileSubjectsEditing, Converter={StaticResource InvertBooleanConverter}}"
                                         Grid.Row="0" ToolBarTray.IsLocked="True">
                                    <Button Click="ButtonAddSubject_OnClick" ToolTip="添加科目。">
                                        <controls1:IconText Kind="Add" Text="添加"/>
                                    </Button>
                                    <Separator/>
                                    <!--<TextBlock>
                                        <Run Text="已选中"/>
                                        <Run Text="X"/>
                                        <Run Text="项。"/>
                                    </TextBlock>-->
                                    <Button Click="ButtonDuplicateSubject_OnClick" ToolTip="复制选中的科目。">
                                        <Button.Style>
                                            <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ViewModel.SelectedSubject}" Value="{x:Null}">
                                                        <Setter Property="IsEnabled" Value="False"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Button.Style>
                                        <controls1:IconText Kind="ContentCopy" Text="复制"/>
                                    </Button>
                                    <Button Click="ButtonSubject_OnClick">
                                        <controls1:IconText Kind="Delete" Text="删除"/>
                                    </Button>
                                </ToolBar>
                                <!-- 科目选择 -->
                                <Grid Grid.Row="1" Grid.Column="0" Margin="0 0 3 0">
                                    <!-- 科目 -->
                                    <DataGrid Grid.Row="0"
                                              x:Name="DataGridSubjects"
                                              ItemsSource="{Binding MainViewModel.Profile.EditingSubjects, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              AutoGenerateColumns="False"
                                              IsReadOnly="{Binding ManagementService.Policy.DisableProfileSubjectsEditing}"
                                              SelectedValue="{Binding ViewModel.SelectedSubject}"
                                              SelectionUnit="FullRow"
                                              GridLinesVisibility="All"
                                              CanUserSortColumns="False"
                                              VirtualizingPanel.IsVirtualizing="True"
                                              VirtualizingPanel.ScrollUnit="Pixel">
                                        <DataGrid.CommandBindings>
                                            <CommandBinding Command="Paste" Executed="Subject_OnPaste" />
                                        </DataGrid.CommandBindings>
                                        <DataGrid.InputBindings>
                                            <KeyBinding Key="V" Modifiers="Control" Command="Paste" />
                                        </DataGrid.InputBindings>
                                        <DataGrid.Columns>
                                            <DataGridTemplateColumn Header="" IsReadOnly="True"
                                                                    Width="50">
                                                <DataGridTemplateColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <materialDesign:PackIcon>
                                                                <materialDesign:PackIcon.Style>
                                                                    <Style TargetType="materialDesign:PackIcon">
                                                                        <Style.Triggers>
                                                                            <DataTrigger Binding="{Binding IsNewItem, RelativeSource={RelativeSource FindAncestor, AncestorType=DataGridRow}, Mode=OneWay}" Value="True">
                                                                                <Setter Property="Kind" Value="Add"/>
                                                                            </DataTrigger>
                                                                            <DataTrigger Binding="{Binding IsOutDoor}" Value="True">
                                                                                <Setter Property="Kind" Value="BasketballHoopOutline"/>
                                                                            </DataTrigger>
                                                                        </Style.Triggers>
                                                                        <Setter Property="Kind" Value="BookOutline"/>
                                                                    </Style>
                                                                </materialDesign:PackIcon.Style>
                                                            </materialDesign:PackIcon>
                                                        </Grid>
                                                    </DataTemplate>
                                                </DataGridTemplateColumn.CellTemplate>
                                            </DataGridTemplateColumn>
                                            <DataGridTextColumn Binding="{Binding Name, Mode=TwoWay}"
                                                                Header="科目名"/>
                                            <DataGridTextColumn Binding="{Binding Initial, Mode=TwoWay}"
                                                                    Header="简称"/>
                                            <DataGridCheckBoxColumn Binding="{Binding IsOutDoor, Mode=TwoWay}"
                                                                        Header="户外课程？"/>
                                            <DataGridTextColumn Binding="{Binding TeacherName, Mode=TwoWay}"
                                                                    Header="科任老师"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>

                                <!-- Gutter -->
                                <GridSplitter Grid.Row="1"
                                              Grid.Column="1"
                                              MaxWidth="500"
                                              Width="10" HorizontalAlignment="Stretch"/>

                                <!-- 科目编辑 -->
                                <Grid Grid.Row="1" Grid.Column="2" Margin="3 0 0 0" 
                                      DataContext="{Binding ViewModel.SelectedSubject}">
                                    <Grid.Style>
                                        <Style TargetType="Grid">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ViewModel.SelectedSubject, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Visible"/>
                                        </Style>
                                    </Grid.Style>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>

                                    <!-- 科目编辑 -->
                                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto">
                                        <StackPanel Margin="12" IsEnabled="{Binding ManagementService.Policy.DisableProfileSubjectsEditing, Converter={StaticResource InvertBooleanConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}">
                                            <TextBlock Text="编辑科目信息" Style="{StaticResource MaterialDesignHeadline5TextBlock}"
                                                       Margin="0 0 0 16"/>
                                            <!-- 科目名 & 简称 -->
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <!-- 科目名 -->
                                                <TextBox Grid.Column="0" 
                                                         x:Name="TextBoxSubjectName"
                                                         Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                                         materialDesign:HintAssist.Hint="科目名"
                                                         Text="{Binding Name}"/>
                                                <!-- 简称 -->
                                                <TextBox Grid.Column="1" Margin="6 0 0 0"
                                                         Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                                         materialDesign:HintAssist.Hint="简称"
                                                         Text="{Binding Initial}"/>
                                            </Grid>
                                            <!-- 科任老师 -->
                                            <TextBox Margin="0 6 0 0"
                                                     Style="{StaticResource MaterialDesignOutlinedTextBox}"
                                                     materialDesign:HintAssist.Hint="科任老师"
                                                     Text="{Binding TeacherName}"/>
                                            <!-- 户外课程 -->
                                            <CheckBox Margin="0 6 0 0"
                                                      Style="{StaticResource MaterialDesignCheckBox}"
                                                      IsChecked="{Binding IsOutDoor}"
                                                      Content="该科目是户外课程"/>
                                            <!-- 附加属性 -->
                                            <Separator Margin="0 20 0 8"/>
                                            <controls1:IconText Kind="CogOutline" Text="更多选项" Margin="0 0 0 8"/>
                                            <ItemsControl ItemsSource="{x:Static services:IAttachedSettingsHostService.SubjectSettingsAttachedSettingsControls}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate>
                                                        <controls1:AttachedSettingsControlPresenter ControlInfo="{Binding}" 
                                                                Margin="0 0 0 8"
                                                                TargetObject="{Binding ViewModel.SelectedSubject, RelativeSource={RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}}">
                                                            <controls1:AttachedSettingsControlPresenter.ContentId>
                                                                <MultiBinding Converter="{StaticResource SubjectDictionaryKeyFinderMultiConverter}" Mode="OneWay">
                                                                    <Binding Path="SelectedItem" ElementName="DataGridSubjects" />
                                                                    <Binding Path="ProfileService.Profile.Subjects" RelativeSource="{RelativeSource FindAncestor, AncestorType=local:ProfileSettingsWindow}"/>
                                                                </MultiBinding>
                                                            </controls1:AttachedSettingsControlPresenter.ContentId>
                                                        </controls1:AttachedSettingsControlPresenter>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                            </ItemsControl>
                                        </StackPanel>
                                    </ScrollViewer>
                                </Grid>
                                <StackPanel Grid.Row="1" Grid.Column="2" 
                                            VerticalAlignment="Center" HorizontalAlignment="Center">
                                    <StackPanel.Style>
                                        <Style TargetType="StackPanel">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ViewModel.SelectedSubject }" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Style>
                                    </StackPanel.Style>
                                    <materialDesign:PackIcon Kind="BookMultipleOutline" Width="72" Height="72"
                                                             HorizontalAlignment="Center"/>
                                    <TextBlock Text="在左侧选择一个科目，然后在此处进行设置。" TextWrapping="Wrap"
                                               Margin="0 8 0 0"/>
                                </StackPanel>

                            </Grid>
                        </TabItem>

                    </TabControl>

                    <Border Grid.Row="1" Background="{DynamicResource MaterialDesignPaper}" 
                            Visibility="{Binding ManagementService.Policy.DisableProfileEditing, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center" >
                            <materialDesign:PackIcon Width="64" Height="64" Kind="Work" HorizontalAlignment="Center"/>
                            <TextBlock Text="档案编辑功能已被您的组织禁用。" HorizontalAlignment="Center" Margin="0 6 0 0"/>
                        </StackPanel>
                    </Border>

                    <!-- AppBar -->
                    <materialDesign:ColorZone Grid.Row="0" Padding="16" Mode="PrimaryMid"
                                              materialDesign:ElevationAssist.Elevation="Dp4">
                        <Grid Margin="4 0 4 0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.Resources>
                                <Style TargetType="materialDesign:Chip" BasedOn="{StaticResource MaterialDesignOutlineChip}">
                                    <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
                                    <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Converter={StaticResource SolidColorBrushOpacityConverter}, ConverterParameter=0.5, Mode=OneWay}"/>
                                    <Setter Property="IconForeground" Value="{DynamicResource MaterialDesignBody}"/>
                                    <Setter Property="IconBackground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Converter={StaticResource SolidColorBrushOpacityConverter}, ConverterParameter=0.5, Mode=OneWay}"/>
                                    <Setter Property="Margin" Value="0 -8 6 -8"/>
                                </Style>
                            </Grid.Resources>
                            <StackPanel Grid.Column="0" 
                                        Orientation="Horizontal" HorizontalAlignment="Left">
                                <TextBlock Text="档案编辑" Style="{StaticResource MaterialDesignHeadline6TextBlock}"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center" Margin="0,0,16,0"/>
                                <Button ToolTip="保存当前档案。" 
                                        Click="ButtonSave_OnClick"
                                        VerticalAlignment="Center"
                                        Margin="0 -16 8 -16"
                                        Style="{StaticResource MaterialDesignToolForegroundButton}"
                                        Content="{materialDesign:PackIcon ContentSave, Size=18}"/>
                                <materialDesign:Chip
                                    Visibility="{Binding ManagementService.IsManagementEnabled, Converter={StaticResource InverseBoolToVisConverter}}"
                                    ToolTip="档案"
                                    Icon="{materialDesign:PackIcon FileDocumentOutline}"
                                    Click="ButtonProfileManage_OnClick"
                                    IsEnabled="{Binding ViewModel.IsOfflineEditor, Converter={StaticResource BooleanToBooleanReConverter}, Mode=OneWay}">
                                    <TextBlock MaxWidth="150" TextWrapping="Wrap">
                                        <Run Text="{Binding ProfileService.CurrentProfilePath}"/>
                                    </TextBlock>
                                </materialDesign:Chip>
                                <materialDesign:Chip
                                    Visibility="{Binding ManagementService.IsManagementEnabled, Converter={StaticResource BooleanToVisibilityConverter}}"
                                    Command="{x:Static materialDesign:DialogHost.OpenDialogCommand}"
                                    ToolTip="查看您的单位/组织如何管理此ClassIsland实例。"
                                    Icon="{materialDesign:PackIcon WorkOutline}">
                                    <materialDesign:Chip.CommandParameter>
                                        <controls:ManagementInfoControl/>
                                    </materialDesign:Chip.CommandParameter>
                                    <TextBlock>
                                        <Run Text="由贵单位管理"/>
                                    </TextBlock>
                                </materialDesign:Chip>
                                <materialDesign:Chip
                                    Visibility="{Binding ViewModel.IsOfflineEditor, Converter={StaticResource InverseBoolToVisConverter}, Mode=OneWay}"
                                    Click="ButtonTemporaryClassPlan_OnClick"
                                    Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                                    ToolTip="当前启用的课表">
                                    <materialDesign:Chip.Style>
                                        <Style TargetType="materialDesign:Chip" BasedOn="{StaticResource MaterialDesignOutlineChip}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ProfileService.Profile.TempClassPlanId}" Value="{x:Null}">
                                                    <Setter Property="Icon" Value="{materialDesign:PackIcon FileChartOutline}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding LessonsService.CurrentClassPlan.IsOverlay}" Value="True">
                                                    <Setter Property="Icon" Value="{materialDesign:PackIcon LayersOutline}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding LessonsService.CurrentClassPlan}" Value="{x:Null}">
                                                    <Setter Property="Icon" Value="{materialDesign:PackIcon FileOutline}"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding LessonsService.IsClassPlanEnabled}" Value="False">
                                                    <Setter Property="Icon" Value="{materialDesign:PackIcon Cancel}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                            <Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
                                            <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Converter={StaticResource SolidColorBrushOpacityConverter}, ConverterParameter=0.5, Mode=OneWay}"/>
                                            <Setter Property="IconForeground" Value="{DynamicResource MaterialDesignBody}"/>
                                            <Setter Property="IconBackground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground), Converter={StaticResource SolidColorBrushOpacityConverter}, ConverterParameter=0.5, Mode=OneWay}"/>
                                            <Setter Property="Margin" Value="0 -8 6 -8"/>

                                            <Setter Property="Icon" Value="{materialDesign:PackIcon FileDocumentMultipleOutline}"/>
                                        </Style>
                                    </materialDesign:Chip.Style>
                                    <TextBlock FontFamily="{StaticResource HarmonyOsSans}" MaxWidth="170" TextWrapping="Wrap">
                                        <Run>
                                            <Run.Style>
                                                <Style TargetType="Run">
                                                    <Setter Property="Text" Value="{Binding LessonsService.CurrentClassPlan.Name}"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding LessonsService.CurrentClassPlan}" Value="{x:Null}">
                                                            <Setter Property="Text" Value="（无课表）"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding LessonsService.IsClassPlanEnabled}" Value="False">
                                                            <Setter Property="Text" Value="（未启用）"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Run.Style>
                                        </Run>
                                    </TextBlock>
                                </materialDesign:Chip>
                                <materialDesign:Chip
                                    Visibility="{Binding ManagementService.IsManagementEnabled, Converter={StaticResource InverseBoolToVisConverter}}"
                                    ToolTip="课表群"
                                    Icon="{materialDesign:PackIcon Group}"
                                    Click="ButtonClassPlansGroup_OnClick"
                                    IsEnabled="{Binding ViewModel.IsOfflineEditor, Converter={StaticResource BooleanToBooleanReConverter}, Mode=OneWay}">
                                    <TextBlock MaxWidth="170" TextWrapping="Wrap">
                                        <TextBlock.DataContext>
                                            <MultiBinding Converter="{StaticResource ClassPlanGroupIdToClassPlanGroupConverter}">
                                                <Binding Path="ProfileService.Profile.ClassPlanGroups"/>
                                                <Binding Path="ProfileService.Profile.SelectedClassPlanGroupId"/>
                                            </MultiBinding>
                                        </TextBlock.DataContext>
                                        <Run Text="{Binding Name}"/>
                                    </TextBlock>
                                </materialDesign:Chip>
                            </StackPanel>
                            <ListBox Grid.Column="1"
                                     Foreground="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"
                                     VerticalContentAlignment="Stretch"
                                     SelectedIndex="{Binding SelectedIndex, ElementName=RootTabControl}"
                                     materialDesign:ListBoxItemAssist.ShowSelection="False"
                                     ScrollViewer.CanContentScroll="True"
                                     ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                                     ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                     Visibility="{Binding ManagementService.Policy.DisableProfileEditing, Converter={StaticResource InverseBoolToVisConverter}}"
                                     Margin="6 -15 0 -15">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal" IsItemsHost="True"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="ListBoxItem" BasedOn="{StaticResource MaterialDesignListBoxItem}">
                                        <Setter Property="Padding" Value="0"/>
                                    </Style>
                                </ListBox.ItemContainerStyle>
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <DataTemplate.Resources>
                                            <Style TargetType="RadioButton" BasedOn="{StaticResource MaterialDesignTabRadioButton}">
                                                <Setter Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
                                                <Setter Property="FontSize" Value="18"/>
                                                <Setter Property="Opacity" Value="0.75"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Setter Property="Opacity" Value="1.0"/>
                                                        <Setter Property="FontWeight" Value="Bold"/>
                                                        <Setter Property="BorderThickness" Value="0 0 0 3"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                                <Style.Resources>
                                                    <Style TargetType="materialDesign:Ripple">
                                                        <Setter Property="Feedback" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type FrameworkElement}}, Path=(TextElement.Foreground)}"/>
                                                    </Style>
                                                </Style.Resources>
                                            </Style>
                                            <converters1:StringToRadioButtonSelectionConverter x:Key="StringToRadioButtonSelectionConverter" />
                                        </DataTemplate.Resources>
                                        <RadioButton Content="{Binding}" 
                                                     IsChecked="{Binding IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ListBoxItem}}">
                                        </RadioButton>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                                <system:String>课表</system:String>
                                <system:String>时间表</system:String>
                                <system:String>科目</system:String>
                            </ListBox>
                            <StackPanel Grid.Column="2" Orientation="Horizontal"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Center">
                                <materialDesign:Chip
                                    ToolTip="查看档案编辑帮助。"
                                    Icon="{materialDesign:PackIcon Help}"
                                    Command="{x:Static ci:UriNavigationCommands.UriNavigationCommand}"
                                    CommandParameter="https://docs.classisland.tech/zh-cn/latest/app/profile-settings-page/"
                                    IsEnabled="{Binding ViewModel.IsOfflineEditor, Converter={StaticResource BooleanToBooleanReConverter}, Mode=OneWay}">
                                    <TextBlock>
                                        <Run Text="帮助"/>
                                    </TextBlock>
                                </materialDesign:Chip>
                                <materialDesign:Chip
                                    ToolTip="从表格导入课表和时间表…"
                                    Icon="{materialDesign:PackIcon Import}"
                                    Click="ButtonImportFromFile_OnClick"
                                    IsEnabled="{Binding ViewModel.IsOfflineEditor, Converter={StaticResource BooleanToBooleanReConverter}, Mode=OneWay}">
                                    <TextBlock>
                                        <Run Text="从表格导入…"/>
                                    </TextBlock>
                                </materialDesign:Chip>
                            </StackPanel>
                        </Grid>
                    </materialDesign:ColorZone>
                    <!-- SnackBar -->
                </Grid>
            </materialDesign:DrawerHost>
        </materialDesign:DialogHost>
        <Grid Visibility="{Binding ViewModel.IsDragEntering, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border Background="{DynamicResource MaterialDesignBackground}"
                    Opacity="0.75"/>
            <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                <materialDesign:PackIcon Kind="FileImport"
                                         HorizontalAlignment="Center"
                                         Height="64" Width="64"
                                         Margin="0 0 0 8"/>
                <TextBlock Text="将表格文件拖入到此处，松手即可开始导入。"
                           FontSize="14"
                           VerticalAlignment="Center"/>
            </StackPanel>
        </Grid>

        <!-- 顶层元素 -->
        <materialDesign:Snackbar VerticalAlignment="Bottom" MessageQueue="{Binding ViewModel.MessageQueue}"/>
        <windows:AsyncBox VerticalAlignment="Bottom" Height="6" LoadingViewType="controls:LoadingMask"/>
    </Grid>
</controls1:MyWindow>